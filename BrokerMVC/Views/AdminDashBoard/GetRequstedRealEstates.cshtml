@model BrokerMVC.Models.ViewModel.RequestedRealestateSearchCriteria
@using PagedList.Mvc;
@{
    ViewBag.Title = General.SiteName + " - " + General.RequestedRealestates;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="panel panel-primary">
    <div class="panel-heading">
        <div class="row">
            <div class="col-md-6 pull-right">
                <h2><i class="fa fa-question-circle fa-fw"></i>@General.RequestedRealestates</h2>
            </div>
            @*<div class="btn-group pull-left">
                <a href='@Url.Action("Create")' class="btn btn-group-lg btn-success">
                    <i class="fa fa-plus-square"></i>
                    @General.CreateNew
                </a>
            </div>*@
        </div>
    </div>
    <div class="panel-body">
        <div class="">
            @using (Html.BeginForm("GetRequstedRealEstates", "AdminDashBoard", FormMethod.Post, new { id = "searchForm" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Page,htmlAttributes:new { @id = "Page" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.SaleTypeID, General.SaleType, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                        <div class="col-md-10">
                            @Html.DropDownList("SaleTypeID", null,General.Select, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SaleTypeID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TypeId, General.RealestateType, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                        <div class="col-md-10">
                            @Html.DropDownList("TypeId", null,General.Select, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CountryID, General.CountryName, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                        <div class="col-md-10">
                            @Html.DropDownList("CountryID", null,General.Select, htmlAttributes: new { @class = "form-control", @onchange = "GetCity()" })
                            @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CityID, General.CityName, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                        <div class="col-md-10">
                            @Html.DropDownList("CityId", null, General.Select, htmlAttributes: new { @class = "form-control", @id = "ddlCity", @onchange = "GetDistrict()" })
                            @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DistrictID, General.District, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                        <div class="col-md-10">
                            @Html.DropDownList("DistrictId", null, htmlAttributes: new { @class = "form-control", @id = "ddldistrict", @onchange = "OnDistrictChange()" })
                            @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" onclick="ResetPage()" value="@General.Search" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="row">
            <table class="table table-responsive table-bordered table-striped table-hover">
                <tr class="warning">
                    <th class="text-center">
                        @General.Name
                    </th>
                    <th class="text-center">
                        @General.Description
                    </th>
                    <th class="text-center">
                        @General.Date
                    </th>
                </tr>

                @foreach (var item in Model.RequestedRealestates)
            {
                <tr>
                    <td class="text-center">
                        <div data-toggle="collapse" data-target="#divrealestate-@item.ID" aria-expanded="false" aria-controls="divContact-@item.ID">
                            <i class="fa fa-angle-down" aria-hidden="true"></i>
                            @item.Name
                        </div>
                    </td>
                    <td class="text-center">
                        @if (item.RealEstateTypeID != null)
                            {
                            @item.RealEstateType.Title }
                        @if (item.SaleTypeID != null)
                            {
                            @item.SaleType.Title
                            }
                        @if (item.Area != null)
                            {
                            @item.Area @General.Meter
                            }@if (item.Price != null)
                            {
                            @General.Price  @item.Price
                            }
                            @if (item.DistrictID != null)
                            {
                            @item.District.Name }
                            @if (item.CityID != null)
                            {
                            @item.City.Name
                            }
                        @if (item.CountryID != null)
                        {
                             @item.Country.Name
                        }
                        </td>

                        <td class="text-center">
                            @item.Date.Value.ToShortDateString()
                        </td>


                    </tr>
                    <tr id="divrealestate-@item.ID" class="collapse tr-colspan">
                        <td colspan="3  " class="td-colspan text-warning">
                            <div class="col-md-12 pull-right">
                                <i class="fa fa-phone-square" aria-hidden="true"></i>

                                @item.Phone
                                <br />
                                <i class="fa fa-envelope-square" aria-hidden="true"></i>
                                @item.Email
                            </div>
                        </td>

                    </tr>
                }
            </table>
        </div>
        <div class="row text-center">
            <div id="Paging" class="Paging">
                @*صفحة @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) من @Model.PageCount*@

                @Html.PagedListPager(Model.RequestedRealestates, page => Url.Action("GetRequstedRealEstates",
new { page }), new PagedListRenderOptions { LiElementClasses = new List<string> { "Pageitem" } })
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script>
        function ResetPage() {
            $('#Page').val(1);
        }
        $('.Pageitem a').click(function () {
            // get the url of the page link
           // var url = this.href;
            
            var page = $(this).text();
          //  alert(page);
            // update a hidden field inside the search form with this value
            $('#Page').val(page);

            // trigger the search
            $('#searchForm').submit();

            // stop the link from navigating to the url it is pointing to
            return false;
        });
        function GetCity() {

            var stateId = $('#CountryID').val();
            //  var url = "../GetCities/"@*@Url.Action("GetCities")+"/"+stateId;*@

            $.ajax({
                url: "@Url.Action("GetCities", "Districts")",
                type: "GET",
                dataType: "JSON",
                data: { CountryID: stateId },
                success: function (cities) {
                    //   alert("test")
                    $("#ddlCity").html(""); // clear before appending new lis
                    $("#ddlCity").append($('<option></option>').html('@General.Select'));
                    $.each(cities, function (i, city) {
                        $("#ddlCity").append(
                            $('<option></option>').val(city.Id).html(city.Name));
                    });
                    $("#ddldistrict").html(""); // clear before appending new list
                    $("#ddldistrict").append($('<option></option>').html('@General.Select'));
                }
            });
        }
        function GetDistrict() {
            var stateId = $('#ddlCity').val();
            //$("#ddlCity").html("");
            //$("#ddlCity").append($('<option></option>').html('@General.Select'));
            $.ajax({
                url: "@Url.Action("GetDistricts", "Districts")",
                type: "GET",
                dataType: "JSON",
                data: { CityID: stateId },
                success: function (cities) {
                    //  alert("success")
                    $("#ddldistrict").html(""); // clear before appending new list
                    $("#ddldistrict").append($('<option></option>').html('@General.Select'));
                    $.each(cities, function (i, city) {
                        $("#ddldistrict").append(
                            $('<option></option>').val(city.Id).html(city.Name));
                    });
                }
            });
        }
    </script>
}