@model BrokerMVC.Models.District
@using ResourcesFiles;
@{
    ViewBag.Title = General.SiteName + " - " + General.Districts + " - " + General.Edit;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="panel panel-primary">

    <div class="panel-heading">
        <div class="row">
            <div class="col-md-6 pull-right">
                <h2 >
                    <a href='@Url.Action("Index")'>
                        <i class="fa fa-subway"></i>
                        @General.Districts
                    </a>
                    /@General.Edit
                </h2>
            </div>
            <div class="btn-group pull-left">
                <a href='@Url.Action("Index")' class="btn btn-group-lg btn-success">
                    <i class="fa fa-angle-left"></i>
                    @General.BackToList

                </a>
            </div>
        </div>


    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
              
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-group">
                    @Html.LabelFor(model => model.CountryId, General.CountryName, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                    <div class="col-md-10">
                        @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control", @onchange = "GetCity()" })
                        @*("CountryID", null, htmlAttributes: new { @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CityID, General.CityName, htmlAttributes: new { @class = "control-label col-md-2 pull-right " })
                    <div class="col-md-10">
                        @Html.DropDownList("CityID", null, htmlAttributes: new { @class = "form-control", @id = "ddlCity" })
                        @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name,General.Name, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EnName,General.EnglishName, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EnName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EnName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Sort,General.Sort, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Sort, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Sort, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@General.Save" class="btn btn-success btn-group-lg" />
                    </div>
                </div>
            </div>
        }

        @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@
        </div>
    </div>

        @section Scripts {
@Scripts.Render("~/bundles/jqueryval")
<script>
        function GetCity() {
            var stateId = $('#CountryId').val();
            var url = "../GetCities/"@*@Url.Action("GetCities")+"/"+stateId;*@

            $.ajax({
                url: url,//'/Districts/GetCities',
                type: "GET",
                dataType: "JSON",
                data: { CountryID: stateId },
                success: function (cities) {
                    $("#ddlCity").html(""); // clear before appending new list
                    $.each(cities, function (i, city) {
                        $("#ddlCity").append(
                            $('<option></option>').val(city.Id).html(city.Name));
                    });
                }
            });
        }
</script>
            
        }
