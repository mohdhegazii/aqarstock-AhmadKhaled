@model BrokerMVC.Models.ViewModel.AddressData

@{
    ViewBag.Title = General.SiteName + " - " + Model.Name  + " " + General.Address;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="panel panel-primary">
    <div class="panel-heading">
        <div class="row">
            
            <div class="col-md-8 col-xs-8 pull-right">
                <h2>@Model.Name - @General.Address</h2>
            </div>
            @if(ViewBag.Add==null)
            { 
            <div class="col-md-3 col-xs-12">
                <div class="btn-group btn-group-status pull-left">
                    <a href='@Url.Action("Edit",new{id=Model.ID })' data-toggle="tooltip" data-placement="bottom" title="@General.BackToList" data-original-title="@General.BackToList" class="btn btn-group-sm btn-back">
                        <strong> <i class="fa fa-arrow-circle-left fa-2x"></i></strong>
                    </a>

                </div>
            </div>
            }
        </div>
    </div>
    <div class="panel panel-body">
        <div class="col-md-7 pull-right">
            <div class="panel panel-warning">
                <div class="panel-heading">
                    <div class="panel-title">
                        <h4>
                            <i class="fa fa-map"></i>
                            @General.Address
                        </h4>
                    </div>
                </div>
                <div id="dicBasicData" class="panel panel-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.ID)
                            @Html.HiddenFor(model => model.Logo)
                            @Html.HiddenFor(model => model.Name)

                            <div class="form-group">
                                @Html.LabelFor(model => model.CountryID, General.CountryName, htmlAttributes: new { @class = "control-label col-md-3 pull-right" })
                                <div class="col-md-9">
                                    @Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control", @onchange = "GetCity()" })
                                    @*("CountryID", null, htmlAttributes: new { @class = "form-control" })*@
                                    @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CityID, General.CityName, htmlAttributes: new { @class = "control-label col-md-3 pull-right " })
                                <div class="col-md-9">
                                    @Html.DropDownList("CityID", null, htmlAttributes: new { @class = "form-control", @id = "ddlCity", @onchange = "GetDistrict()" })
                                    @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DistrictID, General.District, htmlAttributes: new { @class = "control-label col-md-3 pull-right " })
                                <div class="col-md-9">
                                    @Html.DropDownList("DistrictID", null, htmlAttributes: new { @class = "form-control", @id = "ddldistrict", @onchange = "OnDistrictChange()" })
                                    @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-3 pull-right " })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.EnStreet, htmlAttributes: new { @class = "control-label col-md-3 pull-right " })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.EnStreet, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EnStreet, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-3 pull-right" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-3 pull-right" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-9">
                                    <input type="submit" value="@(ViewBag.Add==null?General.Save:General.Next)" class="btn btn-success btn-group-lg" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-5 pull-right">
            <div class="panel panel-warning">
                <div class="panel-heading">
                    <div class="panel-title">
                        <h4>
                            <i class="fa fa-map-marker"></i>
                            @General.Map
                        </h4>
                    </div>
                </div>
                <div class="panel panel-body">
                    <div id="divMap" class="map-md">

                    </div>
                </div>
            </div>
</div>
        </div>
    </div>
            @section Scripts
{
                @Scripts.Render("~/bundles/jqueryval")
                @Scripts.Render(AppSettingKeysVariables.GoogleMapsKey)
                @Scripts.Render("~/Scripts/js/Map.js")
                <script>
                    initMap();
                    if('@Model.Latitude'!='' && '@Model.Longitude'!='')
                    {
                        SetLocation('@Model.Latitude', '@Model.Longitude');
                    }
                    else
        {
                        AddListeners();
        }
                    $(document).ready(function () {
                        $('[data-toggle="tooltip"]').tooltip();
                    });
                
                    function GetCity() {
                        var stateId = $('#CountryID').val();
                      //  var url = "../GetCities/"@*@Url.Action("GetCities")+"/"+stateId;*@
                        GetAddress($('#CountryID option:selected').text(),5);
                        $.ajax({
                            url: "@Url.Action("GetCities", "Districts")",
                            type: "GET",
                            dataType: "JSON",
                            data: { CountryID: stateId },
                            success: function (cities) {
                                $("#ddlCity").html(""); // clear before appending new lis
                                $("#ddlCity").append($('<option></option>').html('@General.Select'));
                                $.each(cities, function (i, city) {
                                    $("#ddlCity").append(
                                        $('<option></option>').val(city.Id).html(city.Name));
                                });
                                $("#ddldistrict").html(""); // clear before appending new list
                                $("#ddldistrict").append($('<option></option>').html('@General.Select'));
                            }
                        });
                    }
                    function OnDistrictChange()
                    {

                        GetAddress($('#CountryID option:selected').text()+", "+$('#ddldistrict option:selected').text(),12);
                    }
                    function OnStreetChange()
                    {
                        GetAddress($('#CountryID option:selected').text()+", "+$('#ddldistrict option:selected').text()+', '+$('#Street').text(),15);
                    }
                        function GetDistrict() {
                            var stateId = $('#ddlCity').val();
                            GetAddress($('#ddlCity option:selected').text(),10);
                            //$("#ddlCity").html("");
                            //$("#ddlCity").append($('<option></option>').html('@General.Select'));
                            $.ajax({
                                url: "@Url.Action("GetDistricts", "Districts")",
                                type: "GET",
                                dataType: "JSON",
                                data: { CityID: stateId },
                                success: function (cities) {
                                    //  alert("success")
                                    $("#ddldistrict").html(""); // clear before appending new list
                                    $("#ddldistrict").append($('<option></option>').html('@General.Select'));
                                    $.each(cities, function (i, city) {
                                        $("#ddldistrict").append(
                                            $('<option></option>').val(city.Id).html(city.Name));
                                    });
                                }
                            });
                        }
                </script>
            }
