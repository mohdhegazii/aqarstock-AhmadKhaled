//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;

using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstates_ActiveStatus", "ActiveStatus", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.ActiveStatus), "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_Subscriber_ActiveStatus", "ActiveStatus", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.ActiveStatus), "Subscriber", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.Subscriber), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_Cities_Countries", "Countries", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Country), "Cities", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.City), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_Districts_Cities", "Cities", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.City), "Districts", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.District), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstates_Cities", "Cities", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.City), "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstates_Countries", "Countries", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Country), "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstates_Currencies", "Currencies", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Currency), "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstates_Districts", "Districts", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.District), "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateKeyword_Keywords", "Keywords", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Keyword), "RealEstateKeyword", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateKeyword), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstates_PaymentTypes", "PaymentTypes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.PaymentType), "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstates_RealEstateCategories", "RealEstateCategories", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateCategory), "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateStatus_RealEstateCategories", "RealEstateCategories", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateCategory), "RealEstateStatus", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateStatus), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateTypes_RealEstateCategories", "RealEstateCategories", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateCategory), "RealEstateTypes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateType), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateCriteria_RealEstates", "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstate), "RealEstateCriteria", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateCriteria), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateCriteria_RealEstateTypeCriterias", "RealEstateTypeCriterias", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateTypeCriteria), "RealEstateCriteria", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateCriteria), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateKeyword_RealEstates", "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstate), "RealEstateKeyword", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateKeyword), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstatePhotos_RealEstates", "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstate), "RealEstatePhotos", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstatePhoto), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstates_RealEstateStatus", "RealEstateStatus", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateStatus), "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstates_RealEstateTypes", "RealEstateTypes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateType), "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstates_SaleTypes", "SaleTypes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.SaleType), "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstates_Subscriber", "Subscriber", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Subscriber), "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateSuspended_RealEstates", "RealEstates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstate), "RealEstateSuspended", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateSuspended), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateSuspended_SuspendReasons", "SuspendReasons", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.SuspendReason), "RealEstateSuspended", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateSuspended), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateCategoryCriterias_RealEstateTypes", "RealEstateTypes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateType), "RealEstateTypeCriterias", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateTypeCriteria), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_Messages_Messages", "SubscriperMessages", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.SubscriperMessage), "SubscriperMessages1", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.SubscriperMessage), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_Messages_MessageTypes", "SubscriperMessageTypes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.SubscriperMessageType), "SubscriperMessages", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.SubscriperMessage), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstatePurchaseRequests_RealEstates", "RealEstate", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstate), "RealEstatePurchaseRequest", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstatePurchaseRequest), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateComplains_RealEstates", "RealEstate", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstate), "RealEstateComplain", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateComplain), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_Partners_Subscriber", "Subscriber", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Subscriber), "Partner", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.Partner), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_Subscriber_RealEstateCompanies", "RealEstateCompany", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateCompany), "Subscriber", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.Subscriber), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_ActiveStatus", "ActiveStatus", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.ActiveStatus), "RealEstateCompany", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateCompany), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_ActiveStatus", "ActiveStatus", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.ActiveStatus), "RealEstateProject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateProject), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_AdPackages", "AdPackage", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.AdPackage), "RealEstateProject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateProject), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_Cities", "City", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.City), "RealEstateProject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateProject), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_Countries", "Country", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Country), "RealEstateProject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateProject), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_Districts", "District", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.District), "RealEstateProject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateProject), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_RealEstateCompanies", "RealEstateCompany", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateCompany), "RealEstateProject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateProject), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateProjectModels_RealEstateProjects", "RealEstateProject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateProject), "RealEstateProjectModel", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateProjectModel), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateProjectModels_RealEstateTypes", "RealEstateType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateType), "RealEstateProjectModel", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateProjectModel), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateProjectPhotos_RealEstateProjects", "RealEstateProject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateProject), "RealEstateProjectPhoto", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateProjectPhoto), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_Subscriber", "Subscriber", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Subscriber), "RealEstateProject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateProject), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateProjectVideos_RealEstateProjects", "RealEstateProject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateProject), "RealEstateProjectVideo", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateProjectVideo), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_NotifyService_Cities", "City", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.City), "NotifyService", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.NotifyService), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_NotifyService_Countries", "Country", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Country), "NotifyService", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.NotifyService), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_NotifyService_Districts", "District", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.District), "NotifyService", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.NotifyService), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_NotifyService_RealEstateTypes", "RealEstateType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateType), "NotifyService", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.NotifyService), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_SearchKeywords_SearchKeywords", "SearchKeyword", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.SearchKeyword), "SearchKeyword1", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.SearchKeyword), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_NotifyService_SaleTypes", "SaleType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.SaleType), "NotifyService", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.NotifyService), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_Cities", "City", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.City), "RealEstateCompany", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateCompany), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_Countries", "Country", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Country), "RealEstateCompany", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateCompany), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_Districts", "District", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.District), "RealEstateCompany", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateCompany), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_SubscriberNotifications_Subscriber", "Subscriber", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Subscriber), "SubscriberNotification", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.SubscriberNotification), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_CompanyMessages_RealEstateCompanies", "RealEstateCompany", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateCompany), "CompanyMessage", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.CompanyMessage), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_CompanyMessages_RealEstateProjects", "RealEstateProject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateProject), "CompanyMessage", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.CompanyMessage), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_SubscriberFavouriteRealEstates_RealEstates", "RealEstate", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstate), "SubscriberFavouriteRealEstate", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.SubscriberFavouriteRealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_SubscriberFavouriteRealEstates_Subscriber", "Subscriber", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Subscriber), "SubscriberFavouriteRealEstate", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.SubscriberFavouriteRealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_SuspendReasons", "SuspendReason", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.SuspendReason), "RealEstateCompany", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateCompany), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_SuspendReasons", "SuspendReason", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.SuspendReason), "RealEstateProject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateProject), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstates_RealEstateProjects", "RealEstateProject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateProject), "RealEstate", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstate), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealestateCatalogProperties_RealEstateCatalog", "RealEstateCatalog", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateCatalog), "RealestateCatalogProperty", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealestateCatalogProperty), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealestateCatalogProperties_RealEstates", "RealEstate", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstate), "RealestateCatalogProperty", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealestateCatalogProperty), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_Tags_Tags", "Tag", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Tag), "Tag1", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.Tag), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealestateCatalogTags_RealEstateCatalogs", "RealEstateCatalog", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.RealEstateCatalog), "RealestateCatalogTag", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealestateCatalogTag), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealestateCatalogTags_Tags", "Tag", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.Tag), "RealestateCatalogTag", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealestateCatalogTag), true)]
[assembly: EdmRelationshipAttribute("RealEstateBrokerModel", "FK_RealEstateCatalogs_CatalogCategories", "CatalogCategory", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerDLL.CatalogCategory), "RealEstateCatalog", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerDLL.RealEstateCatalog), true)]

#endregion

namespace BrokerDLL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BrokerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BrokerEntities object using the connection string found in the 'BrokerEntities' section of the application configuration file.
        /// </summary>
        public BrokerEntities() : base("name=BrokerEntities", "BrokerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BrokerEntities object.
        /// </summary>
        public BrokerEntities(string connectionString) : base(connectionString, "BrokerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BrokerEntities object.
        /// </summary>
        public BrokerEntities(EntityConnection connection) : base(connection, "BrokerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActiveStatus> ActiveStatuses
        {
            get
            {
                if ((_ActiveStatuses == null))
                {
                    _ActiveStatuses = base.CreateObjectSet<ActiveStatus>("ActiveStatuses");
                }
                return _ActiveStatuses;
            }
        }
        private ObjectSet<ActiveStatus> _ActiveStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<District> Districts
        {
            get
            {
                if ((_Districts == null))
                {
                    _Districts = base.CreateObjectSet<District>("Districts");
                }
                return _Districts;
            }
        }
        private ObjectSet<District> _Districts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Keyword> Keywords
        {
            get
            {
                if ((_Keywords == null))
                {
                    _Keywords = base.CreateObjectSet<Keyword>("Keywords");
                }
                return _Keywords;
            }
        }
        private ObjectSet<Keyword> _Keywords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentType> PaymentTypes
        {
            get
            {
                if ((_PaymentTypes == null))
                {
                    _PaymentTypes = base.CreateObjectSet<PaymentType>("PaymentTypes");
                }
                return _PaymentTypes;
            }
        }
        private ObjectSet<PaymentType> _PaymentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateCategory> RealEstateCategories
        {
            get
            {
                if ((_RealEstateCategories == null))
                {
                    _RealEstateCategories = base.CreateObjectSet<RealEstateCategory>("RealEstateCategories");
                }
                return _RealEstateCategories;
            }
        }
        private ObjectSet<RealEstateCategory> _RealEstateCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateCriteria> RealEstateCriterias
        {
            get
            {
                if ((_RealEstateCriterias == null))
                {
                    _RealEstateCriterias = base.CreateObjectSet<RealEstateCriteria>("RealEstateCriterias");
                }
                return _RealEstateCriterias;
            }
        }
        private ObjectSet<RealEstateCriteria> _RealEstateCriterias;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateKeyword> RealEstateKeywords
        {
            get
            {
                if ((_RealEstateKeywords == null))
                {
                    _RealEstateKeywords = base.CreateObjectSet<RealEstateKeyword>("RealEstateKeywords");
                }
                return _RealEstateKeywords;
            }
        }
        private ObjectSet<RealEstateKeyword> _RealEstateKeywords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstatePhoto> RealEstatePhotos
        {
            get
            {
                if ((_RealEstatePhotos == null))
                {
                    _RealEstatePhotos = base.CreateObjectSet<RealEstatePhoto>("RealEstatePhotos");
                }
                return _RealEstatePhotos;
            }
        }
        private ObjectSet<RealEstatePhoto> _RealEstatePhotos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstate> RealEstates
        {
            get
            {
                if ((_RealEstates == null))
                {
                    _RealEstates = base.CreateObjectSet<RealEstate>("RealEstates");
                }
                return _RealEstates;
            }
        }
        private ObjectSet<RealEstate> _RealEstates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateStatus> RealEstateStatuses
        {
            get
            {
                if ((_RealEstateStatuses == null))
                {
                    _RealEstateStatuses = base.CreateObjectSet<RealEstateStatus>("RealEstateStatuses");
                }
                return _RealEstateStatuses;
            }
        }
        private ObjectSet<RealEstateStatus> _RealEstateStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateSuspended> RealEstateSuspendeds
        {
            get
            {
                if ((_RealEstateSuspendeds == null))
                {
                    _RealEstateSuspendeds = base.CreateObjectSet<RealEstateSuspended>("RealEstateSuspendeds");
                }
                return _RealEstateSuspendeds;
            }
        }
        private ObjectSet<RealEstateSuspended> _RealEstateSuspendeds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateTypeCriteria> RealEstateTypeCriterias
        {
            get
            {
                if ((_RealEstateTypeCriterias == null))
                {
                    _RealEstateTypeCriterias = base.CreateObjectSet<RealEstateTypeCriteria>("RealEstateTypeCriterias");
                }
                return _RealEstateTypeCriterias;
            }
        }
        private ObjectSet<RealEstateTypeCriteria> _RealEstateTypeCriterias;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateType> RealEstateTypes
        {
            get
            {
                if ((_RealEstateTypes == null))
                {
                    _RealEstateTypes = base.CreateObjectSet<RealEstateType>("RealEstateTypes");
                }
                return _RealEstateTypes;
            }
        }
        private ObjectSet<RealEstateType> _RealEstateTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SaleType> SaleTypes
        {
            get
            {
                if ((_SaleTypes == null))
                {
                    _SaleTypes = base.CreateObjectSet<SaleType>("SaleTypes");
                }
                return _SaleTypes;
            }
        }
        private ObjectSet<SaleType> _SaleTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subscriber> Subscribers
        {
            get
            {
                if ((_Subscribers == null))
                {
                    _Subscribers = base.CreateObjectSet<Subscriber>("Subscribers");
                }
                return _Subscribers;
            }
        }
        private ObjectSet<Subscriber> _Subscribers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubscriberLog> SubscriberLogs
        {
            get
            {
                if ((_SubscriberLogs == null))
                {
                    _SubscriberLogs = base.CreateObjectSet<SubscriberLog>("SubscriberLogs");
                }
                return _SubscriberLogs;
            }
        }
        private ObjectSet<SubscriberLog> _SubscriberLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubscriperMessage> SubscriperMessages
        {
            get
            {
                if ((_SubscriperMessages == null))
                {
                    _SubscriperMessages = base.CreateObjectSet<SubscriperMessage>("SubscriperMessages");
                }
                return _SubscriperMessages;
            }
        }
        private ObjectSet<SubscriperMessage> _SubscriperMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubscriperMessageType> SubscriperMessageTypes
        {
            get
            {
                if ((_SubscriperMessageTypes == null))
                {
                    _SubscriperMessageTypes = base.CreateObjectSet<SubscriperMessageType>("SubscriperMessageTypes");
                }
                return _SubscriperMessageTypes;
            }
        }
        private ObjectSet<SubscriperMessageType> _SubscriperMessageTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SuspendReason> SuspendReasons
        {
            get
            {
                if ((_SuspendReasons == null))
                {
                    _SuspendReasons = base.CreateObjectSet<SuspendReason>("SuspendReasons");
                }
                return _SuspendReasons;
            }
        }
        private ObjectSet<SuspendReason> _SuspendReasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstatePurchaseRequest> RealEstatePurchaseRequests
        {
            get
            {
                if ((_RealEstatePurchaseRequests == null))
                {
                    _RealEstatePurchaseRequests = base.CreateObjectSet<RealEstatePurchaseRequest>("RealEstatePurchaseRequests");
                }
                return _RealEstatePurchaseRequests;
            }
        }
        private ObjectSet<RealEstatePurchaseRequest> _RealEstatePurchaseRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateComplain> RealEstateComplains
        {
            get
            {
                if ((_RealEstateComplains == null))
                {
                    _RealEstateComplains = base.CreateObjectSet<RealEstateComplain>("RealEstateComplains");
                }
                return _RealEstateComplains;
            }
        }
        private ObjectSet<RealEstateComplain> _RealEstateComplains;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Partner> Partners
        {
            get
            {
                if ((_Partners == null))
                {
                    _Partners = base.CreateObjectSet<Partner>("Partners");
                }
                return _Partners;
            }
        }
        private ObjectSet<Partner> _Partners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SearchKeyword> SearchKeywords
        {
            get
            {
                if ((_SearchKeywords == null))
                {
                    _SearchKeywords = base.CreateObjectSet<SearchKeyword>("SearchKeywords");
                }
                return _SearchKeywords;
            }
        }
        private ObjectSet<SearchKeyword> _SearchKeywords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateCompany> RealEstateCompanies
        {
            get
            {
                if ((_RealEstateCompanies == null))
                {
                    _RealEstateCompanies = base.CreateObjectSet<RealEstateCompany>("RealEstateCompanies");
                }
                return _RealEstateCompanies;
            }
        }
        private ObjectSet<RealEstateCompany> _RealEstateCompanies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdPackage> AdPackages
        {
            get
            {
                if ((_AdPackages == null))
                {
                    _AdPackages = base.CreateObjectSet<AdPackage>("AdPackages");
                }
                return _AdPackages;
            }
        }
        private ObjectSet<AdPackage> _AdPackages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateProjectModel> RealEstateProjectModels
        {
            get
            {
                if ((_RealEstateProjectModels == null))
                {
                    _RealEstateProjectModels = base.CreateObjectSet<RealEstateProjectModel>("RealEstateProjectModels");
                }
                return _RealEstateProjectModels;
            }
        }
        private ObjectSet<RealEstateProjectModel> _RealEstateProjectModels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateProjectPhoto> RealEstateProjectPhotos
        {
            get
            {
                if ((_RealEstateProjectPhotos == null))
                {
                    _RealEstateProjectPhotos = base.CreateObjectSet<RealEstateProjectPhoto>("RealEstateProjectPhotos");
                }
                return _RealEstateProjectPhotos;
            }
        }
        private ObjectSet<RealEstateProjectPhoto> _RealEstateProjectPhotos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateProject> RealEstateProjects
        {
            get
            {
                if ((_RealEstateProjects == null))
                {
                    _RealEstateProjects = base.CreateObjectSet<RealEstateProject>("RealEstateProjects");
                }
                return _RealEstateProjects;
            }
        }
        private ObjectSet<RealEstateProject> _RealEstateProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateProjectVideo> RealEstateProjectVideos
        {
            get
            {
                if ((_RealEstateProjectVideos == null))
                {
                    _RealEstateProjectVideos = base.CreateObjectSet<RealEstateProjectVideo>("RealEstateProjectVideos");
                }
                return _RealEstateProjectVideos;
            }
        }
        private ObjectSet<RealEstateProjectVideo> _RealEstateProjectVideos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotifyService> NotifyServices
        {
            get
            {
                if ((_NotifyServices == null))
                {
                    _NotifyServices = base.CreateObjectSet<NotifyService>("NotifyServices");
                }
                return _NotifyServices;
            }
        }
        private ObjectSet<NotifyService> _NotifyServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubscriberNotification> SubscriberNotifications
        {
            get
            {
                if ((_SubscriberNotifications == null))
                {
                    _SubscriberNotifications = base.CreateObjectSet<SubscriberNotification>("SubscriberNotifications");
                }
                return _SubscriberNotifications;
            }
        }
        private ObjectSet<SubscriberNotification> _SubscriberNotifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyMessage> CompanyMessages
        {
            get
            {
                if ((_CompanyMessages == null))
                {
                    _CompanyMessages = base.CreateObjectSet<CompanyMessage>("CompanyMessages");
                }
                return _CompanyMessages;
            }
        }
        private ObjectSet<CompanyMessage> _CompanyMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubscriberFavouriteRealEstate> SubscriberFavouriteRealEstates
        {
            get
            {
                if ((_SubscriberFavouriteRealEstates == null))
                {
                    _SubscriberFavouriteRealEstates = base.CreateObjectSet<SubscriberFavouriteRealEstate>("SubscriberFavouriteRealEstates");
                }
                return _SubscriberFavouriteRealEstates;
            }
        }
        private ObjectSet<SubscriberFavouriteRealEstate> _SubscriberFavouriteRealEstates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Advertisement> Advertisements
        {
            get
            {
                if ((_Advertisements == null))
                {
                    _Advertisements = base.CreateObjectSet<Advertisement>("Advertisements");
                }
                return _Advertisements;
            }
        }
        private ObjectSet<Advertisement> _Advertisements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealestateCatalogProperty> RealestateCatalogProperties
        {
            get
            {
                if ((_RealestateCatalogProperties == null))
                {
                    _RealestateCatalogProperties = base.CreateObjectSet<RealestateCatalogProperty>("RealestateCatalogProperties");
                }
                return _RealestateCatalogProperties;
            }
        }
        private ObjectSet<RealestateCatalogProperty> _RealestateCatalogProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealEstateCatalog> RealEstateCatalogs
        {
            get
            {
                if ((_RealEstateCatalogs == null))
                {
                    _RealEstateCatalogs = base.CreateObjectSet<RealEstateCatalog>("RealEstateCatalogs");
                }
                return _RealEstateCatalogs;
            }
        }
        private ObjectSet<RealEstateCatalog> _RealEstateCatalogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RealestateCatalogTag> RealestateCatalogTags
        {
            get
            {
                if ((_RealestateCatalogTags == null))
                {
                    _RealestateCatalogTags = base.CreateObjectSet<RealestateCatalogTag>("RealestateCatalogTags");
                }
                return _RealestateCatalogTags;
            }
        }
        private ObjectSet<RealestateCatalogTag> _RealestateCatalogTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CatalogCategory> CatalogCategories
        {
            get
            {
                if ((_CatalogCategories == null))
                {
                    _CatalogCategories = base.CreateObjectSet<CatalogCategory>("CatalogCategories");
                }
                return _CatalogCategories;
            }
        }
        private ObjectSet<CatalogCategory> _CatalogCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentTagCategory> ContentTagCategories
        {
            get
            {
                if ((_ContentTagCategories == null))
                {
                    _ContentTagCategories = base.CreateObjectSet<ContentTagCategory>("ContentTagCategories");
                }
                return _ContentTagCategories;
            }
        }
        private ObjectSet<ContentTagCategory> _ContentTagCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentTag> ContentTags
        {
            get
            {
                if ((_ContentTags == null))
                {
                    _ContentTags = base.CreateObjectSet<ContentTag>("ContentTags");
                }
                return _ContentTags;
            }
        }
        private ObjectSet<ContentTag> _ContentTags;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActiveStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActiveStatuses(ActiveStatus activeStatus)
        {
            base.AddObject("ActiveStatuses", activeStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Districts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDistricts(District district)
        {
            base.AddObject("Districts", district);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Keywords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKeywords(Keyword keyword)
        {
            base.AddObject("Keywords", keyword);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentTypes(PaymentType paymentType)
        {
            base.AddObject("PaymentTypes", paymentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateCategories(RealEstateCategory realEstateCategory)
        {
            base.AddObject("RealEstateCategories", realEstateCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateCriterias EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateCriterias(RealEstateCriteria realEstateCriteria)
        {
            base.AddObject("RealEstateCriterias", realEstateCriteria);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateKeywords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateKeywords(RealEstateKeyword realEstateKeyword)
        {
            base.AddObject("RealEstateKeywords", realEstateKeyword);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstatePhotos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstatePhotos(RealEstatePhoto realEstatePhoto)
        {
            base.AddObject("RealEstatePhotos", realEstatePhoto);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstates(RealEstate realEstate)
        {
            base.AddObject("RealEstates", realEstate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateStatuses(RealEstateStatus realEstateStatus)
        {
            base.AddObject("RealEstateStatuses", realEstateStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateSuspendeds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateSuspendeds(RealEstateSuspended realEstateSuspended)
        {
            base.AddObject("RealEstateSuspendeds", realEstateSuspended);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateTypeCriterias EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateTypeCriterias(RealEstateTypeCriteria realEstateTypeCriteria)
        {
            base.AddObject("RealEstateTypeCriterias", realEstateTypeCriteria);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateTypes(RealEstateType realEstateType)
        {
            base.AddObject("RealEstateTypes", realEstateType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SaleTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSaleTypes(SaleType saleType)
        {
            base.AddObject("SaleTypes", saleType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subscribers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscribers(Subscriber subscriber)
        {
            base.AddObject("Subscribers", subscriber);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubscriberLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriberLogs(SubscriberLog subscriberLog)
        {
            base.AddObject("SubscriberLogs", subscriberLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubscriperMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriperMessages(SubscriperMessage subscriperMessage)
        {
            base.AddObject("SubscriperMessages", subscriperMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubscriperMessageTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriperMessageTypes(SubscriperMessageType subscriperMessageType)
        {
            base.AddObject("SubscriperMessageTypes", subscriperMessageType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SuspendReasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuspendReasons(SuspendReason suspendReason)
        {
            base.AddObject("SuspendReasons", suspendReason);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstatePurchaseRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstatePurchaseRequests(RealEstatePurchaseRequest realEstatePurchaseRequest)
        {
            base.AddObject("RealEstatePurchaseRequests", realEstatePurchaseRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateComplains EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateComplains(RealEstateComplain realEstateComplain)
        {
            base.AddObject("RealEstateComplains", realEstateComplain);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Partners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPartners(Partner partner)
        {
            base.AddObject("Partners", partner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SearchKeywords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSearchKeywords(SearchKeyword searchKeyword)
        {
            base.AddObject("SearchKeywords", searchKeyword);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateCompanies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateCompanies(RealEstateCompany realEstateCompany)
        {
            base.AddObject("RealEstateCompanies", realEstateCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdPackages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdPackages(AdPackage adPackage)
        {
            base.AddObject("AdPackages", adPackage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateProjectModels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateProjectModels(RealEstateProjectModel realEstateProjectModel)
        {
            base.AddObject("RealEstateProjectModels", realEstateProjectModel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateProjectPhotos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateProjectPhotos(RealEstateProjectPhoto realEstateProjectPhoto)
        {
            base.AddObject("RealEstateProjectPhotos", realEstateProjectPhoto);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateProjects(RealEstateProject realEstateProject)
        {
            base.AddObject("RealEstateProjects", realEstateProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateProjectVideos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateProjectVideos(RealEstateProjectVideo realEstateProjectVideo)
        {
            base.AddObject("RealEstateProjectVideos", realEstateProjectVideo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotifyServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotifyServices(NotifyService notifyService)
        {
            base.AddObject("NotifyServices", notifyService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubscriberNotifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriberNotifications(SubscriberNotification subscriberNotification)
        {
            base.AddObject("SubscriberNotifications", subscriberNotification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyMessages(CompanyMessage companyMessage)
        {
            base.AddObject("CompanyMessages", companyMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubscriberFavouriteRealEstates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriberFavouriteRealEstates(SubscriberFavouriteRealEstate subscriberFavouriteRealEstate)
        {
            base.AddObject("SubscriberFavouriteRealEstates", subscriberFavouriteRealEstate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Advertisements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvertisements(Advertisement advertisement)
        {
            base.AddObject("Advertisements", advertisement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealestateCatalogProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealestateCatalogProperties(RealestateCatalogProperty realestateCatalogProperty)
        {
            base.AddObject("RealestateCatalogProperties", realestateCatalogProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealEstateCatalogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealEstateCatalogs(RealEstateCatalog realEstateCatalog)
        {
            base.AddObject("RealEstateCatalogs", realEstateCatalog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealestateCatalogTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealestateCatalogTags(RealestateCatalogTag realestateCatalogTag)
        {
            base.AddObject("RealestateCatalogTags", realestateCatalogTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CatalogCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCatalogCategories(CatalogCategory catalogCategory)
        {
            base.AddObject("CatalogCategories", catalogCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentTagCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentTagCategories(ContentTagCategory contentTagCategory)
        {
            base.AddObject("ContentTagCategories", contentTagCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentTags(ContentTag contentTag)
        {
            base.AddObject("ContentTags", contentTag);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="saleTypeId">No Metadata Documentation available.</param>
        /// <param name="typeID">No Metadata Documentation available.</param>
        /// <param name="statusID">No Metadata Documentation available.</param>
        /// <param name="countryID">No Metadata Documentation available.</param>
        /// <param name="cityID">No Metadata Documentation available.</param>
        /// <param name="districtID">No Metadata Documentation available.</param>
        /// <param name="area">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="paymentType">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        /// <param name="fromIndex">No Metadata Documentation available.</param>
        /// <param name="toIndex">No Metadata Documentation available.</param>
        public ObjectResult<RealEstate> SearchRealEstate(Nullable<global::System.Int32> saleTypeId, Nullable<global::System.Int32> typeID, Nullable<global::System.Int32> statusID, Nullable<global::System.Int32> countryID, Nullable<global::System.Int32> cityID, Nullable<global::System.Int32> districtID, Nullable<global::System.Int32> area, Nullable<global::System.Int32> price, Nullable<global::System.Int32> paymentType, Nullable<global::System.Int32> currency, Nullable<global::System.Int32> fromIndex, Nullable<global::System.Int32> toIndex)
        {
            ObjectParameter saleTypeIdParameter;
            if (saleTypeId.HasValue)
            {
                saleTypeIdParameter = new ObjectParameter("SaleTypeId", saleTypeId);
            }
            else
            {
                saleTypeIdParameter = new ObjectParameter("SaleTypeId", typeof(global::System.Int32));
            }
    
            ObjectParameter typeIDParameter;
            if (typeID.HasValue)
            {
                typeIDParameter = new ObjectParameter("TypeID", typeID);
            }
            else
            {
                typeIDParameter = new ObjectParameter("TypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter statusIDParameter;
            if (statusID.HasValue)
            {
                statusIDParameter = new ObjectParameter("StatusID", statusID);
            }
            else
            {
                statusIDParameter = new ObjectParameter("StatusID", typeof(global::System.Int32));
            }
    
            ObjectParameter countryIDParameter;
            if (countryID.HasValue)
            {
                countryIDParameter = new ObjectParameter("CountryID", countryID);
            }
            else
            {
                countryIDParameter = new ObjectParameter("CountryID", typeof(global::System.Int32));
            }
    
            ObjectParameter cityIDParameter;
            if (cityID.HasValue)
            {
                cityIDParameter = new ObjectParameter("CityID", cityID);
            }
            else
            {
                cityIDParameter = new ObjectParameter("CityID", typeof(global::System.Int32));
            }
    
            ObjectParameter districtIDParameter;
            if (districtID.HasValue)
            {
                districtIDParameter = new ObjectParameter("DistrictID", districtID);
            }
            else
            {
                districtIDParameter = new ObjectParameter("DistrictID", typeof(global::System.Int32));
            }
    
            ObjectParameter areaParameter;
            if (area.HasValue)
            {
                areaParameter = new ObjectParameter("Area", area);
            }
            else
            {
                areaParameter = new ObjectParameter("Area", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Int32));
            }
    
            ObjectParameter paymentTypeParameter;
            if (paymentType.HasValue)
            {
                paymentTypeParameter = new ObjectParameter("PaymentType", paymentType);
            }
            else
            {
                paymentTypeParameter = new ObjectParameter("PaymentType", typeof(global::System.Int32));
            }
    
            ObjectParameter currencyParameter;
            if (currency.HasValue)
            {
                currencyParameter = new ObjectParameter("Currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("Currency", typeof(global::System.Int32));
            }
    
            ObjectParameter fromIndexParameter;
            if (fromIndex.HasValue)
            {
                fromIndexParameter = new ObjectParameter("FromIndex", fromIndex);
            }
            else
            {
                fromIndexParameter = new ObjectParameter("FromIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter toIndexParameter;
            if (toIndex.HasValue)
            {
                toIndexParameter = new ObjectParameter("ToIndex", toIndex);
            }
            else
            {
                toIndexParameter = new ObjectParameter("ToIndex", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<RealEstate>("SearchRealEstate", saleTypeIdParameter, typeIDParameter, statusIDParameter, countryIDParameter, cityIDParameter, districtIDParameter, areaParameter, priceParameter, paymentTypeParameter, currencyParameter, fromIndexParameter, toIndexParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="saleTypeId">No Metadata Documentation available.</param>
        /// <param name="typeID">No Metadata Documentation available.</param>
        /// <param name="statusID">No Metadata Documentation available.</param>
        /// <param name="countryID">No Metadata Documentation available.</param>
        /// <param name="cityID">No Metadata Documentation available.</param>
        /// <param name="districtID">No Metadata Documentation available.</param>
        /// <param name="area">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="paymentType">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        /// <param name="fromIndex">No Metadata Documentation available.</param>
        /// <param name="toIndex">No Metadata Documentation available.</param>
        public ObjectResult<RealEstate> SearchRealEstate(Nullable<global::System.Int32> saleTypeId, Nullable<global::System.Int32> typeID, Nullable<global::System.Int32> statusID, Nullable<global::System.Int32> countryID, Nullable<global::System.Int32> cityID, Nullable<global::System.Int32> districtID, Nullable<global::System.Int32> area, Nullable<global::System.Int32> price, Nullable<global::System.Int32> paymentType, Nullable<global::System.Int32> currency, Nullable<global::System.Int32> fromIndex, Nullable<global::System.Int32> toIndex, MergeOption mergeOption)
        {
            ObjectParameter saleTypeIdParameter;
            if (saleTypeId.HasValue)
            {
                saleTypeIdParameter = new ObjectParameter("SaleTypeId", saleTypeId);
            }
            else
            {
                saleTypeIdParameter = new ObjectParameter("SaleTypeId", typeof(global::System.Int32));
            }
    
            ObjectParameter typeIDParameter;
            if (typeID.HasValue)
            {
                typeIDParameter = new ObjectParameter("TypeID", typeID);
            }
            else
            {
                typeIDParameter = new ObjectParameter("TypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter statusIDParameter;
            if (statusID.HasValue)
            {
                statusIDParameter = new ObjectParameter("StatusID", statusID);
            }
            else
            {
                statusIDParameter = new ObjectParameter("StatusID", typeof(global::System.Int32));
            }
    
            ObjectParameter countryIDParameter;
            if (countryID.HasValue)
            {
                countryIDParameter = new ObjectParameter("CountryID", countryID);
            }
            else
            {
                countryIDParameter = new ObjectParameter("CountryID", typeof(global::System.Int32));
            }
    
            ObjectParameter cityIDParameter;
            if (cityID.HasValue)
            {
                cityIDParameter = new ObjectParameter("CityID", cityID);
            }
            else
            {
                cityIDParameter = new ObjectParameter("CityID", typeof(global::System.Int32));
            }
    
            ObjectParameter districtIDParameter;
            if (districtID.HasValue)
            {
                districtIDParameter = new ObjectParameter("DistrictID", districtID);
            }
            else
            {
                districtIDParameter = new ObjectParameter("DistrictID", typeof(global::System.Int32));
            }
    
            ObjectParameter areaParameter;
            if (area.HasValue)
            {
                areaParameter = new ObjectParameter("Area", area);
            }
            else
            {
                areaParameter = new ObjectParameter("Area", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Int32));
            }
    
            ObjectParameter paymentTypeParameter;
            if (paymentType.HasValue)
            {
                paymentTypeParameter = new ObjectParameter("PaymentType", paymentType);
            }
            else
            {
                paymentTypeParameter = new ObjectParameter("PaymentType", typeof(global::System.Int32));
            }
    
            ObjectParameter currencyParameter;
            if (currency.HasValue)
            {
                currencyParameter = new ObjectParameter("Currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("Currency", typeof(global::System.Int32));
            }
    
            ObjectParameter fromIndexParameter;
            if (fromIndex.HasValue)
            {
                fromIndexParameter = new ObjectParameter("FromIndex", fromIndex);
            }
            else
            {
                fromIndexParameter = new ObjectParameter("FromIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter toIndexParameter;
            if (toIndex.HasValue)
            {
                toIndexParameter = new ObjectParameter("ToIndex", toIndex);
            }
            else
            {
                toIndexParameter = new ObjectParameter("ToIndex", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<RealEstate>("SearchRealEstate", mergeOption, saleTypeIdParameter, typeIDParameter, statusIDParameter, countryIDParameter, cityIDParameter, districtIDParameter, areaParameter, priceParameter, paymentTypeParameter, currencyParameter, fromIndexParameter, toIndexParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="saleTypeId">No Metadata Documentation available.</param>
        /// <param name="typeID">No Metadata Documentation available.</param>
        /// <param name="statusID">No Metadata Documentation available.</param>
        /// <param name="countryID">No Metadata Documentation available.</param>
        /// <param name="cityID">No Metadata Documentation available.</param>
        /// <param name="districtID">No Metadata Documentation available.</param>
        /// <param name="area">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="paymentType">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> CountSearchRealEstate(Nullable<global::System.Int32> saleTypeId, Nullable<global::System.Int32> typeID, Nullable<global::System.Int32> statusID, Nullable<global::System.Int32> countryID, Nullable<global::System.Int32> cityID, Nullable<global::System.Int32> districtID, Nullable<global::System.Int32> area, Nullable<global::System.Int32> price, Nullable<global::System.Int32> paymentType, Nullable<global::System.Int32> currency)
        {
            ObjectParameter saleTypeIdParameter;
            if (saleTypeId.HasValue)
            {
                saleTypeIdParameter = new ObjectParameter("SaleTypeId", saleTypeId);
            }
            else
            {
                saleTypeIdParameter = new ObjectParameter("SaleTypeId", typeof(global::System.Int32));
            }
    
            ObjectParameter typeIDParameter;
            if (typeID.HasValue)
            {
                typeIDParameter = new ObjectParameter("TypeID", typeID);
            }
            else
            {
                typeIDParameter = new ObjectParameter("TypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter statusIDParameter;
            if (statusID.HasValue)
            {
                statusIDParameter = new ObjectParameter("StatusID", statusID);
            }
            else
            {
                statusIDParameter = new ObjectParameter("StatusID", typeof(global::System.Int32));
            }
    
            ObjectParameter countryIDParameter;
            if (countryID.HasValue)
            {
                countryIDParameter = new ObjectParameter("CountryID", countryID);
            }
            else
            {
                countryIDParameter = new ObjectParameter("CountryID", typeof(global::System.Int32));
            }
    
            ObjectParameter cityIDParameter;
            if (cityID.HasValue)
            {
                cityIDParameter = new ObjectParameter("CityID", cityID);
            }
            else
            {
                cityIDParameter = new ObjectParameter("CityID", typeof(global::System.Int32));
            }
    
            ObjectParameter districtIDParameter;
            if (districtID.HasValue)
            {
                districtIDParameter = new ObjectParameter("DistrictID", districtID);
            }
            else
            {
                districtIDParameter = new ObjectParameter("DistrictID", typeof(global::System.Int32));
            }
    
            ObjectParameter areaParameter;
            if (area.HasValue)
            {
                areaParameter = new ObjectParameter("Area", area);
            }
            else
            {
                areaParameter = new ObjectParameter("Area", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Int32));
            }
    
            ObjectParameter paymentTypeParameter;
            if (paymentType.HasValue)
            {
                paymentTypeParameter = new ObjectParameter("PaymentType", paymentType);
            }
            else
            {
                paymentTypeParameter = new ObjectParameter("PaymentType", typeof(global::System.Int32));
            }
    
            ObjectParameter currencyParameter;
            if (currency.HasValue)
            {
                currencyParameter = new ObjectParameter("Currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("Currency", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("CountSearchRealEstate", saleTypeIdParameter, typeIDParameter, statusIDParameter, countryIDParameter, cityIDParameter, districtIDParameter, areaParameter, priceParameter, paymentTypeParameter, currencyParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="ActiveStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActiveStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActiveStatus object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ActiveStatus CreateActiveStatus(global::System.Int32 id)
        {
            ActiveStatus activeStatus = new ActiveStatus();
            activeStatus.ID = id;
            return activeStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_ActiveStatus", "RealEstates")]
        public EntityCollection<RealEstate> RealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_ActiveStatus", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_ActiveStatus", "RealEstates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Subscriber_ActiveStatus", "Subscriber")]
        public EntityCollection<Subscriber> Subscribers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscriber>("RealEstateBrokerModel.FK_Subscriber_ActiveStatus", "Subscriber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscriber>("RealEstateBrokerModel.FK_Subscriber_ActiveStatus", "Subscriber", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_ActiveStatus", "RealEstateCompany")]
        public EntityCollection<RealEstateCompany> RealEstateCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateCompanies_ActiveStatus", "RealEstateCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateCompanies_ActiveStatus", "RealEstateCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_ActiveStatus", "RealEstateProject")]
        public EntityCollection<RealEstateProject> RealEstateProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_ActiveStatus", "RealEstateProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_ActiveStatus", "RealEstateProject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="AdPackage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdPackage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdPackage object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static AdPackage CreateAdPackage(global::System.Int32 id)
        {
            AdPackage adPackage = new AdPackage();
            adPackage.ID = id;
            return adPackage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_AdPackages", "RealEstateProject")]
        public EntityCollection<RealEstateProject> RealEstateProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_AdPackages", "RealEstateProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_AdPackages", "RealEstateProject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="Advertisement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Advertisement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Advertisement object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Advertisement CreateAdvertisement(global::System.Int32 id)
        {
            Advertisement advertisement = new Advertisement();
            advertisement.ID = id;
            return advertisement;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true, "URL");
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentSide
        {
            get
            {
                return _ContentSide;
            }
            set
            {
                OnContentSideChanging(value);
                ReportPropertyChanging("ContentSide");
                _ContentSide = StructuralObject.SetValidValue(value, true, "ContentSide");
                ReportPropertyChanged("ContentSide");
                OnContentSideChanged();
            }
        }
        private global::System.String _ContentSide;
        partial void OnContentSideChanging(global::System.String value);
        partial void OnContentSideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePageSide
        {
            get
            {
                return _HomePageSide;
            }
            set
            {
                OnHomePageSideChanging(value);
                ReportPropertyChanging("HomePageSide");
                _HomePageSide = StructuralObject.SetValidValue(value, true, "HomePageSide");
                ReportPropertyChanged("HomePageSide");
                OnHomePageSideChanged();
            }
        }
        private global::System.String _HomePageSide;
        partial void OnHomePageSideChanging(global::System.String value);
        partial void OnHomePageSideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePageMainLarge
        {
            get
            {
                return _HomePageMainLarge;
            }
            set
            {
                OnHomePageMainLargeChanging(value);
                ReportPropertyChanging("HomePageMainLarge");
                _HomePageMainLarge = StructuralObject.SetValidValue(value, true, "HomePageMainLarge");
                ReportPropertyChanged("HomePageMainLarge");
                OnHomePageMainLargeChanged();
            }
        }
        private global::System.String _HomePageMainLarge;
        partial void OnHomePageMainLargeChanging(global::System.String value);
        partial void OnHomePageMainLargeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePageMainSmall
        {
            get
            {
                return _HomePageMainSmall;
            }
            set
            {
                OnHomePageMainSmallChanging(value);
                ReportPropertyChanging("HomePageMainSmall");
                _HomePageMainSmall = StructuralObject.SetValidValue(value, true, "HomePageMainSmall");
                ReportPropertyChanged("HomePageMainSmall");
                OnHomePageMainSmallChanged();
            }
        }
        private global::System.String _HomePageMainSmall;
        partial void OnHomePageMainSmallChanging(global::System.String value);
        partial void OnHomePageMainSmallChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="CatalogCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CatalogCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CatalogCategory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static CatalogCategory CreateCatalogCategory(global::System.Int32 id)
        {
            CatalogCategory catalogCategory = new CatalogCategory();
            catalogCategory.ID = id;
            return catalogCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCatalogs_CatalogCategories", "RealEstateCatalog")]
        public EntityCollection<RealEstateCatalog> RealEstateCatalogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateCatalog>("RealEstateBrokerModel.FK_RealEstateCatalogs_CatalogCategories", "RealEstateCatalog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateCatalog>("RealEstateBrokerModel.FK_RealEstateCatalogs_CatalogCategories", "RealEstateCatalog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static City CreateCity(global::System.Int32 id)
        {
            City city = new City();
            city.ID = id;
            return city;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnName
        {
            get
            {
                return _EnName;
            }
            set
            {
                OnEnNameChanging(value);
                ReportPropertyChanging("EnName");
                _EnName = StructuralObject.SetValidValue(value, true, "EnName");
                ReportPropertyChanged("EnName");
                OnEnNameChanged();
            }
        }
        private global::System.String _EnName;
        partial void OnEnNameChanging(global::System.String value);
        partial void OnEnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sort
        {
            get
            {
                return _Sort;
            }
            set
            {
                OnSortChanging(value);
                ReportPropertyChanging("Sort");
                _Sort = StructuralObject.SetValidValue(value, "Sort");
                ReportPropertyChanged("Sort");
                OnSortChanged();
            }
        }
        private Nullable<global::System.Int32> _Sort;
        partial void OnSortChanging(Nullable<global::System.Int32> value);
        partial void OnSortChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Cities_Countries", "Countries")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_Cities_Countries", "Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_Cities_Countries", "Countries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_Cities_Countries", "Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("RealEstateBrokerModel.FK_Cities_Countries", "Countries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Districts_Cities", "Districts")]
        public EntityCollection<District> Districts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<District>("RealEstateBrokerModel.FK_Districts_Cities", "Districts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<District>("RealEstateBrokerModel.FK_Districts_Cities", "Districts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_Cities", "RealEstates")]
        public EntityCollection<RealEstate> RealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_Cities", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_Cities", "RealEstates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_Cities", "RealEstateProject")]
        public EntityCollection<RealEstateProject> RealEstateProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_Cities", "RealEstateProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_Cities", "RealEstateProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_NotifyService_Cities", "NotifyService")]
        public EntityCollection<NotifyService> NotifyServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotifyService>("RealEstateBrokerModel.FK_NotifyService_Cities", "NotifyService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotifyService>("RealEstateBrokerModel.FK_NotifyService_Cities", "NotifyService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_Cities", "RealEstateCompany")]
        public EntityCollection<RealEstateCompany> RealEstateCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateCompanies_Cities", "RealEstateCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateCompanies_Cities", "RealEstateCompany", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="CompanyMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyMessage object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static CompanyMessage CreateCompanyMessage(global::System.Int32 id)
        {
            CompanyMessage companyMessage = new CompanyMessage();
            companyMessage.ID = id;
            return companyMessage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyID;
        partial void OnCompanyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true, "Message");
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRead
        {
            get
            {
                return _IsRead;
            }
            set
            {
                OnIsReadChanging(value);
                ReportPropertyChanging("IsRead");
                _IsRead = StructuralObject.SetValidValue(value, "IsRead");
                ReportPropertyChanged("IsRead");
                OnIsReadChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRead;
        partial void OnIsReadChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReadChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_CompanyMessages_RealEstateCompanies", "RealEstateCompany")]
        public RealEstateCompany RealEstateCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCompany>("RealEstateBrokerModel.FK_CompanyMessages_RealEstateCompanies", "RealEstateCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCompany>("RealEstateBrokerModel.FK_CompanyMessages_RealEstateCompanies", "RealEstateCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateCompany> RealEstateCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCompany>("RealEstateBrokerModel.FK_CompanyMessages_RealEstateCompanies", "RealEstateCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateCompany>("RealEstateBrokerModel.FK_CompanyMessages_RealEstateCompanies", "RealEstateCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_CompanyMessages_RealEstateProjects", "RealEstateProject")]
        public RealEstateProject RealEstateProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_CompanyMessages_RealEstateProjects", "RealEstateProject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_CompanyMessages_RealEstateProjects", "RealEstateProject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateProject> RealEstateProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_CompanyMessages_RealEstateProjects", "RealEstateProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_CompanyMessages_RealEstateProjects", "RealEstateProject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="ContentTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentTag object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ContentTag CreateContentTag(global::System.Int32 id)
        {
            ContentTag contentTag = new ContentTag();
            contentTag.ID = id;
            return contentTag;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value, "CategoryID");
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="ContentTagCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentTagCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentTagCategory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ContentTagCategory CreateContentTagCategory(global::System.Int32 id)
        {
            ContentTagCategory contentTagCategory = new ContentTagCategory();
            contentTagCategory.ID = id;
            return contentTagCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Country CreateCountry(global::System.Int32 id)
        {
            Country country = new Country();
            country.ID = id;
            return country;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnName
        {
            get
            {
                return _EnName;
            }
            set
            {
                OnEnNameChanging(value);
                ReportPropertyChanging("EnName");
                _EnName = StructuralObject.SetValidValue(value, true, "EnName");
                ReportPropertyChanged("EnName");
                OnEnNameChanged();
            }
        }
        private global::System.String _EnName;
        partial void OnEnNameChanging(global::System.String value);
        partial void OnEnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sort
        {
            get
            {
                return _Sort;
            }
            set
            {
                OnSortChanging(value);
                ReportPropertyChanging("Sort");
                _Sort = StructuralObject.SetValidValue(value, "Sort");
                ReportPropertyChanged("Sort");
                OnSortChanged();
            }
        }
        private Nullable<global::System.Int32> _Sort;
        partial void OnSortChanging(Nullable<global::System.Int32> value);
        partial void OnSortChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Cities_Countries", "Cities")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("RealEstateBrokerModel.FK_Cities_Countries", "Cities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("RealEstateBrokerModel.FK_Cities_Countries", "Cities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_Countries", "RealEstates")]
        public EntityCollection<RealEstate> RealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_Countries", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_Countries", "RealEstates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_Countries", "RealEstateProject")]
        public EntityCollection<RealEstateProject> RealEstateProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_Countries", "RealEstateProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_Countries", "RealEstateProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_NotifyService_Countries", "NotifyService")]
        public EntityCollection<NotifyService> NotifyServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotifyService>("RealEstateBrokerModel.FK_NotifyService_Countries", "NotifyService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotifyService>("RealEstateBrokerModel.FK_NotifyService_Countries", "NotifyService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_Countries", "RealEstateCompany")]
        public EntityCollection<RealEstateCompany> RealEstateCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateCompanies_Countries", "RealEstateCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateCompanies_Countries", "RealEstateCompany", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Currency CreateCurrency(global::System.Int32 id)
        {
            Currency currency = new Currency();
            currency.ID = id;
            return currency;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnName
        {
            get
            {
                return _EnName;
            }
            set
            {
                OnEnNameChanging(value);
                ReportPropertyChanging("EnName");
                _EnName = StructuralObject.SetValidValue(value, true, "EnName");
                ReportPropertyChanged("EnName");
                OnEnNameChanged();
            }
        }
        private global::System.String _EnName;
        partial void OnEnNameChanging(global::System.String value);
        partial void OnEnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sort
        {
            get
            {
                return _Sort;
            }
            set
            {
                OnSortChanging(value);
                ReportPropertyChanging("Sort");
                _Sort = StructuralObject.SetValidValue(value, "Sort");
                ReportPropertyChanged("Sort");
                OnSortChanged();
            }
        }
        private Nullable<global::System.Int32> _Sort;
        partial void OnSortChanging(Nullable<global::System.Int32> value);
        partial void OnSortChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_Currencies", "RealEstates")]
        public EntityCollection<RealEstate> RealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_Currencies", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_Currencies", "RealEstates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="District")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class District : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new District object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static District CreateDistrict(global::System.Int32 id)
        {
            District district = new District();
            district.ID = id;
            return district;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnName
        {
            get
            {
                return _EnName;
            }
            set
            {
                OnEnNameChanging(value);
                ReportPropertyChanging("EnName");
                _EnName = StructuralObject.SetValidValue(value, true, "EnName");
                ReportPropertyChanged("EnName");
                OnEnNameChanged();
            }
        }
        private global::System.String _EnName;
        partial void OnEnNameChanging(global::System.String value);
        partial void OnEnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sort
        {
            get
            {
                return _Sort;
            }
            set
            {
                OnSortChanging(value);
                ReportPropertyChanging("Sort");
                _Sort = StructuralObject.SetValidValue(value, "Sort");
                ReportPropertyChanged("Sort");
                OnSortChanged();
            }
        }
        private Nullable<global::System.Int32> _Sort;
        partial void OnSortChanging(Nullable<global::System.Int32> value);
        partial void OnSortChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Districts_Cities", "Cities")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_Districts_Cities", "Cities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_Districts_Cities", "Cities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_Districts_Cities", "Cities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("RealEstateBrokerModel.FK_Districts_Cities", "Cities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_Districts", "RealEstates")]
        public EntityCollection<RealEstate> RealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_Districts", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_Districts", "RealEstates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_Districts", "RealEstateProject")]
        public EntityCollection<RealEstateProject> RealEstateProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_Districts", "RealEstateProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_Districts", "RealEstateProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_NotifyService_Districts", "NotifyService")]
        public EntityCollection<NotifyService> NotifyServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotifyService>("RealEstateBrokerModel.FK_NotifyService_Districts", "NotifyService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotifyService>("RealEstateBrokerModel.FK_NotifyService_Districts", "NotifyService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_Districts", "RealEstateCompany")]
        public EntityCollection<RealEstateCompany> RealEstateCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateCompanies_Districts", "RealEstateCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateCompanies_Districts", "RealEstateCompany", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="Keyword")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Keyword : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Keyword object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Keyword CreateKeyword(global::System.Int32 id)
        {
            Keyword keyword = new Keyword();
            keyword.ID = id;
            return keyword;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateKeyword_Keywords", "RealEstateKeyword")]
        public EntityCollection<RealEstateKeyword> RealEstateKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateKeyword>("RealEstateBrokerModel.FK_RealEstateKeyword_Keywords", "RealEstateKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateKeyword>("RealEstateBrokerModel.FK_RealEstateKeyword_Keywords", "RealEstateKeyword", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="NotifyService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotifyService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotifyService object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static NotifyService CreateNotifyService(global::System.Int32 id)
        {
            NotifyService notifyService = new NotifyService();
            notifyService.ID = id;
            return notifyService;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateTypeID
        {
            get
            {
                return _RealEstateTypeID;
            }
            set
            {
                OnRealEstateTypeIDChanging(value);
                ReportPropertyChanging("RealEstateTypeID");
                _RealEstateTypeID = StructuralObject.SetValidValue(value, "RealEstateTypeID");
                ReportPropertyChanged("RealEstateTypeID");
                OnRealEstateTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateTypeID;
        partial void OnRealEstateTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DistrictID
        {
            get
            {
                return _DistrictID;
            }
            set
            {
                OnDistrictIDChanging(value);
                ReportPropertyChanging("DistrictID");
                _DistrictID = StructuralObject.SetValidValue(value, "DistrictID");
                ReportPropertyChanged("DistrictID");
                OnDistrictIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DistrictID;
        partial void OnDistrictIDChanging(Nullable<global::System.Int32> value);
        partial void OnDistrictIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Int32> _Price;
        partial void OnPriceChanging(Nullable<global::System.Int32> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SaleTypeID
        {
            get
            {
                return _SaleTypeID;
            }
            set
            {
                OnSaleTypeIDChanging(value);
                ReportPropertyChanging("SaleTypeID");
                _SaleTypeID = StructuralObject.SetValidValue(value, "SaleTypeID");
                ReportPropertyChanged("SaleTypeID");
                OnSaleTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SaleTypeID;
        partial void OnSaleTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnSaleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value, "Area");
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private Nullable<global::System.Int32> _Area;
        partial void OnAreaChanging(Nullable<global::System.Int32> value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_NotifyService_Cities", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_NotifyService_Cities", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_NotifyService_Cities", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_NotifyService_Cities", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("RealEstateBrokerModel.FK_NotifyService_Cities", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_NotifyService_Countries", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_NotifyService_Countries", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_NotifyService_Countries", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_NotifyService_Countries", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("RealEstateBrokerModel.FK_NotifyService_Countries", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_NotifyService_Districts", "District")]
        public District District
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateBrokerModel.FK_NotifyService_Districts", "District").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateBrokerModel.FK_NotifyService_Districts", "District").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<District> DistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateBrokerModel.FK_NotifyService_Districts", "District");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<District>("RealEstateBrokerModel.FK_NotifyService_Districts", "District", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_NotifyService_RealEstateTypes", "RealEstateType")]
        public RealEstateType RealEstateType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_NotifyService_RealEstateTypes", "RealEstateType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_NotifyService_RealEstateTypes", "RealEstateType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateType> RealEstateTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_NotifyService_RealEstateTypes", "RealEstateType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_NotifyService_RealEstateTypes", "RealEstateType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_NotifyService_SaleTypes", "SaleType")]
        public SaleType SaleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SaleType>("RealEstateBrokerModel.FK_NotifyService_SaleTypes", "SaleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SaleType>("RealEstateBrokerModel.FK_NotifyService_SaleTypes", "SaleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SaleType> SaleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SaleType>("RealEstateBrokerModel.FK_NotifyService_SaleTypes", "SaleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SaleType>("RealEstateBrokerModel.FK_NotifyService_SaleTypes", "SaleType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="Partner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Partner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Partner object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Partner CreatePartner(global::System.Int32 id)
        {
            Partner partner = new Partner();
            partner.ID = id;
            return partner;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubscriberID
        {
            get
            {
                return _SubscriberID;
            }
            set
            {
                OnSubscriberIDChanging(value);
                ReportPropertyChanging("SubscriberID");
                _SubscriberID = StructuralObject.SetValidValue(value, "SubscriberID");
                ReportPropertyChanged("SubscriberID");
                OnSubscriberIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubscriberID;
        partial void OnSubscriberIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubscriberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageTitle
        {
            get
            {
                return _PageTitle;
            }
            set
            {
                OnPageTitleChanging(value);
                ReportPropertyChanging("PageTitle");
                _PageTitle = StructuralObject.SetValidValue(value, true, "PageTitle");
                ReportPropertyChanged("PageTitle");
                OnPageTitleChanged();
            }
        }
        private global::System.String _PageTitle;
        partial void OnPageTitleChanging(global::System.String value);
        partial void OnPageTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KeyWords
        {
            get
            {
                return _KeyWords;
            }
            set
            {
                OnKeyWordsChanging(value);
                ReportPropertyChanging("KeyWords");
                _KeyWords = StructuralObject.SetValidValue(value, true, "KeyWords");
                ReportPropertyChanged("KeyWords");
                OnKeyWordsChanged();
            }
        }
        private global::System.String _KeyWords;
        partial void OnKeyWordsChanging(global::System.String value);
        partial void OnKeyWordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Logo
        {
            get
            {
                return _Logo;
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, true, "Logo");
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.String _Logo;
        partial void OnLogoChanging(global::System.String value);
        partial void OnLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true, "URL");
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Partners_Subscriber", "Subscriber")]
        public Subscriber Subscriber
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_Partners_Subscriber", "Subscriber").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_Partners_Subscriber", "Subscriber").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subscriber> SubscriberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_Partners_Subscriber", "Subscriber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subscriber>("RealEstateBrokerModel.FK_Partners_Subscriber", "Subscriber", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="PaymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static PaymentType CreatePaymentType(global::System.Int32 id)
        {
            PaymentType paymentType = new PaymentType();
            paymentType.ID = id;
            return paymentType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_PaymentTypes", "RealEstates")]
        public EntityCollection<RealEstate> RealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_PaymentTypes", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_PaymentTypes", "RealEstates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static RealEstate CreateRealEstate(global::System.Int32 id, global::System.Int32 code)
        {
            RealEstate realEstate = new RealEstate();
            realEstate.ID = id;
            realEstate.Code = code;
            return realEstate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubscriberID
        {
            get
            {
                return _SubscriberID;
            }
            set
            {
                OnSubscriberIDChanging(value);
                ReportPropertyChanging("SubscriberID");
                _SubscriberID = StructuralObject.SetValidValue(value, "SubscriberID");
                ReportPropertyChanged("SubscriberID");
                OnSubscriberIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubscriberID;
        partial void OnSubscriberIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubscriberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateCategoryID
        {
            get
            {
                return _RealEstateCategoryID;
            }
            set
            {
                OnRealEstateCategoryIDChanging(value);
                ReportPropertyChanging("RealEstateCategoryID");
                _RealEstateCategoryID = StructuralObject.SetValidValue(value, "RealEstateCategoryID");
                ReportPropertyChanged("RealEstateCategoryID");
                OnRealEstateCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateCategoryID;
        partial void OnRealEstateCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateStatusID
        {
            get
            {
                return _RealEstateStatusID;
            }
            set
            {
                OnRealEstateStatusIDChanging(value);
                ReportPropertyChanging("RealEstateStatusID");
                _RealEstateStatusID = StructuralObject.SetValidValue(value, "RealEstateStatusID");
                ReportPropertyChanged("RealEstateStatusID");
                OnRealEstateStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateStatusID;
        partial void OnRealEstateStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateTypeID
        {
            get
            {
                return _RealEstateTypeID;
            }
            set
            {
                OnRealEstateTypeIDChanging(value);
                ReportPropertyChanging("RealEstateTypeID");
                _RealEstateTypeID = StructuralObject.SetValidValue(value, "RealEstateTypeID");
                ReportPropertyChanged("RealEstateTypeID");
                OnRealEstateTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateTypeID;
        partial void OnRealEstateTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentTypeID
        {
            get
            {
                return _PaymentTypeID;
            }
            set
            {
                OnPaymentTypeIDChanging(value);
                ReportPropertyChanging("PaymentTypeID");
                _PaymentTypeID = StructuralObject.SetValidValue(value, "PaymentTypeID");
                ReportPropertyChanged("PaymentTypeID");
                OnPaymentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentTypeID;
        partial void OnPaymentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = StructuralObject.SetValidValue(value, "CurrencyID");
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyID;
        partial void OnCurrencyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SaleTypeId
        {
            get
            {
                return _SaleTypeId;
            }
            set
            {
                OnSaleTypeIdChanging(value);
                ReportPropertyChanging("SaleTypeId");
                _SaleTypeId = StructuralObject.SetValidValue(value, "SaleTypeId");
                ReportPropertyChanged("SaleTypeId");
                OnSaleTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SaleTypeId;
        partial void OnSaleTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnSaleTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DistrictID
        {
            get
            {
                return _DistrictID;
            }
            set
            {
                OnDistrictIDChanging(value);
                ReportPropertyChanging("DistrictID");
                _DistrictID = StructuralObject.SetValidValue(value, "DistrictID");
                ReportPropertyChanged("DistrictID");
                OnDistrictIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DistrictID;
        partial void OnDistrictIDChanging(Nullable<global::System.Int32> value);
        partial void OnDistrictIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true, "Street");
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Double> _Price;
        partial void OnPriceChanging(Nullable<global::System.Double> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value, "Area");
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private Nullable<global::System.Double> _Area;
        partial void OnAreaChanging(Nullable<global::System.Double> value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value, true, "Longitude");
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.String _Longitude;
        partial void OnLongitudeChanging(global::System.String value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value, true, "Latitude");
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.String _Latitude;
        partial void OnLatitudeChanging(global::System.String value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerName
        {
            get
            {
                return _OwnerName;
            }
            set
            {
                OnOwnerNameChanging(value);
                ReportPropertyChanging("OwnerName");
                _OwnerName = StructuralObject.SetValidValue(value, true, "OwnerName");
                ReportPropertyChanged("OwnerName");
                OnOwnerNameChanged();
            }
        }
        private global::System.String _OwnerName;
        partial void OnOwnerNameChanging(global::System.String value);
        partial void OnOwnerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerMobile
        {
            get
            {
                return _OwnerMobile;
            }
            set
            {
                OnOwnerMobileChanging(value);
                ReportPropertyChanging("OwnerMobile");
                _OwnerMobile = StructuralObject.SetValidValue(value, true, "OwnerMobile");
                ReportPropertyChanged("OwnerMobile");
                OnOwnerMobileChanged();
            }
        }
        private global::System.String _OwnerMobile;
        partial void OnOwnerMobileChanging(global::System.String value);
        partial void OnOwnerMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerEmail
        {
            get
            {
                return _OwnerEmail;
            }
            set
            {
                OnOwnerEmailChanging(value);
                ReportPropertyChanging("OwnerEmail");
                _OwnerEmail = StructuralObject.SetValidValue(value, true, "OwnerEmail");
                ReportPropertyChanged("OwnerEmail");
                OnOwnerEmailChanged();
            }
        }
        private global::System.String _OwnerEmail;
        partial void OnOwnerEmailChanging(global::System.String value);
        partial void OnOwnerEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSold
        {
            get
            {
                return _IsSold;
            }
            set
            {
                OnIsSoldChanging(value);
                ReportPropertyChanging("IsSold");
                _IsSold = StructuralObject.SetValidValue(value, "IsSold");
                ReportPropertyChanged("IsSold");
                OnIsSoldChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSold;
        partial void OnIsSoldChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSoldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActiveStatusId
        {
            get
            {
                return _ActiveStatusId;
            }
            set
            {
                OnActiveStatusIdChanging(value);
                ReportPropertyChanging("ActiveStatusId");
                _ActiveStatusId = StructuralObject.SetValidValue(value, "ActiveStatusId");
                ReportPropertyChanged("ActiveStatusId");
                OnActiveStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ActiveStatusId;
        partial void OnActiveStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnActiveStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> UseContactInfo
        {
            get
            {
                return _UseContactInfo;
            }
            set
            {
                OnUseContactInfoChanging(value);
                ReportPropertyChanging("UseContactInfo");
                _UseContactInfo = StructuralObject.SetValidValue(value, "UseContactInfo");
                ReportPropertyChanged("UseContactInfo");
                OnUseContactInfoChanged();
            }
        }
        private Nullable<global::System.Boolean> _UseContactInfo;
        partial void OnUseContactInfoChanging(Nullable<global::System.Boolean> value);
        partial void OnUseContactInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.Int32 _Code;
        partial void OnCodeChanging(global::System.Int32 value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsMigrated
        {
            get
            {
                return _IsMigrated;
            }
            set
            {
                OnIsMigratedChanging(value);
                ReportPropertyChanging("IsMigrated");
                _IsMigrated = StructuralObject.SetValidValue(value, "IsMigrated");
                ReportPropertyChanged("IsMigrated");
                OnIsMigratedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsMigrated;
        partial void OnIsMigratedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsMigratedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSpecialOffer
        {
            get
            {
                return _IsSpecialOffer;
            }
            set
            {
                OnIsSpecialOfferChanging(value);
                ReportPropertyChanging("IsSpecialOffer");
                _IsSpecialOffer = StructuralObject.SetValidValue(value, "IsSpecialOffer");
                ReportPropertyChanged("IsSpecialOffer");
                OnIsSpecialOfferChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSpecialOffer;
        partial void OnIsSpecialOfferChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSpecialOfferChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_ActiveStatus", "ActiveStatus")]
        public ActiveStatus ActiveStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_RealEstates_ActiveStatus", "ActiveStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_RealEstates_ActiveStatus", "ActiveStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActiveStatus> ActiveStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_RealEstates_ActiveStatus", "ActiveStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_RealEstates_ActiveStatus", "ActiveStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_Cities", "Cities")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_RealEstates_Cities", "Cities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_RealEstates_Cities", "Cities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_RealEstates_Cities", "Cities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("RealEstateBrokerModel.FK_RealEstates_Cities", "Cities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_Countries", "Countries")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_RealEstates_Countries", "Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_RealEstates_Countries", "Countries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_RealEstates_Countries", "Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("RealEstateBrokerModel.FK_RealEstates_Countries", "Countries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_Currencies", "Currencies")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("RealEstateBrokerModel.FK_RealEstates_Currencies", "Currencies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("RealEstateBrokerModel.FK_RealEstates_Currencies", "Currencies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("RealEstateBrokerModel.FK_RealEstates_Currencies", "Currencies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("RealEstateBrokerModel.FK_RealEstates_Currencies", "Currencies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_Districts", "Districts")]
        public District District
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateBrokerModel.FK_RealEstates_Districts", "Districts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateBrokerModel.FK_RealEstates_Districts", "Districts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<District> DistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateBrokerModel.FK_RealEstates_Districts", "Districts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<District>("RealEstateBrokerModel.FK_RealEstates_Districts", "Districts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_PaymentTypes", "PaymentTypes")]
        public PaymentType PaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("RealEstateBrokerModel.FK_RealEstates_PaymentTypes", "PaymentTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("RealEstateBrokerModel.FK_RealEstates_PaymentTypes", "PaymentTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentType> PaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("RealEstateBrokerModel.FK_RealEstates_PaymentTypes", "PaymentTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentType>("RealEstateBrokerModel.FK_RealEstates_PaymentTypes", "PaymentTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_RealEstateCategories", "RealEstateCategories")]
        public RealEstateCategory RealEstateCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCategory>("RealEstateBrokerModel.FK_RealEstates_RealEstateCategories", "RealEstateCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCategory>("RealEstateBrokerModel.FK_RealEstates_RealEstateCategories", "RealEstateCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateCategory> RealEstateCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCategory>("RealEstateBrokerModel.FK_RealEstates_RealEstateCategories", "RealEstateCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateCategory>("RealEstateBrokerModel.FK_RealEstates_RealEstateCategories", "RealEstateCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCriteria_RealEstates", "RealEstateCriteria")]
        public EntityCollection<RealEstateCriteria> RealEstateCriterias
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateCriteria>("RealEstateBrokerModel.FK_RealEstateCriteria_RealEstates", "RealEstateCriteria");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateCriteria>("RealEstateBrokerModel.FK_RealEstateCriteria_RealEstates", "RealEstateCriteria", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateKeyword_RealEstates", "RealEstateKeyword")]
        public EntityCollection<RealEstateKeyword> RealEstateKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateKeyword>("RealEstateBrokerModel.FK_RealEstateKeyword_RealEstates", "RealEstateKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateKeyword>("RealEstateBrokerModel.FK_RealEstateKeyword_RealEstates", "RealEstateKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstatePhotos_RealEstates", "RealEstatePhotos")]
        public EntityCollection<RealEstatePhoto> RealEstatePhotos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstatePhoto>("RealEstateBrokerModel.FK_RealEstatePhotos_RealEstates", "RealEstatePhotos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstatePhoto>("RealEstateBrokerModel.FK_RealEstatePhotos_RealEstates", "RealEstatePhotos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_RealEstateStatus", "RealEstateStatus")]
        public RealEstateStatus RealEstateStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateStatus>("RealEstateBrokerModel.FK_RealEstates_RealEstateStatus", "RealEstateStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateStatus>("RealEstateBrokerModel.FK_RealEstates_RealEstateStatus", "RealEstateStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateStatus> RealEstateStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateStatus>("RealEstateBrokerModel.FK_RealEstates_RealEstateStatus", "RealEstateStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateStatus>("RealEstateBrokerModel.FK_RealEstates_RealEstateStatus", "RealEstateStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_RealEstateTypes", "RealEstateTypes")]
        public RealEstateType RealEstateType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_RealEstates_RealEstateTypes", "RealEstateTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_RealEstates_RealEstateTypes", "RealEstateTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateType> RealEstateTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_RealEstates_RealEstateTypes", "RealEstateTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_RealEstates_RealEstateTypes", "RealEstateTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_SaleTypes", "SaleTypes")]
        public SaleType SaleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SaleType>("RealEstateBrokerModel.FK_RealEstates_SaleTypes", "SaleTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SaleType>("RealEstateBrokerModel.FK_RealEstates_SaleTypes", "SaleTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SaleType> SaleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SaleType>("RealEstateBrokerModel.FK_RealEstates_SaleTypes", "SaleTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SaleType>("RealEstateBrokerModel.FK_RealEstates_SaleTypes", "SaleTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_Subscriber", "Subscriber")]
        public Subscriber Subscriber
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_RealEstates_Subscriber", "Subscriber").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_RealEstates_Subscriber", "Subscriber").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subscriber> SubscriberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_RealEstates_Subscriber", "Subscriber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subscriber>("RealEstateBrokerModel.FK_RealEstates_Subscriber", "Subscriber", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateSuspended_RealEstates", "RealEstateSuspended")]
        public EntityCollection<RealEstateSuspended> RealEstateSuspendeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateSuspended>("RealEstateBrokerModel.FK_RealEstateSuspended_RealEstates", "RealEstateSuspended");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateSuspended>("RealEstateBrokerModel.FK_RealEstateSuspended_RealEstates", "RealEstateSuspended", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstatePurchaseRequests_RealEstates", "RealEstatePurchaseRequest")]
        public EntityCollection<RealEstatePurchaseRequest> RealEstatePurchaseRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstatePurchaseRequest>("RealEstateBrokerModel.FK_RealEstatePurchaseRequests_RealEstates", "RealEstatePurchaseRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstatePurchaseRequest>("RealEstateBrokerModel.FK_RealEstatePurchaseRequests_RealEstates", "RealEstatePurchaseRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateComplains_RealEstates", "RealEstateComplain")]
        public EntityCollection<RealEstateComplain> RealEstateComplains
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateComplain>("RealEstateBrokerModel.FK_RealEstateComplains_RealEstates", "RealEstateComplain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateComplain>("RealEstateBrokerModel.FK_RealEstateComplains_RealEstates", "RealEstateComplain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_SubscriberFavouriteRealEstates_RealEstates", "SubscriberFavouriteRealEstate")]
        public EntityCollection<SubscriberFavouriteRealEstate> SubscriberFavouriteRealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubscriberFavouriteRealEstate>("RealEstateBrokerModel.FK_SubscriberFavouriteRealEstates_RealEstates", "SubscriberFavouriteRealEstate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubscriberFavouriteRealEstate>("RealEstateBrokerModel.FK_SubscriberFavouriteRealEstates_RealEstates", "SubscriberFavouriteRealEstate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_RealEstateProjects", "RealEstateProject")]
        public RealEstateProject RealEstateProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstates_RealEstateProjects", "RealEstateProject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstates_RealEstateProjects", "RealEstateProject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateProject> RealEstateProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstates_RealEstateProjects", "RealEstateProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstates_RealEstateProjects", "RealEstateProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealestateCatalogProperties_RealEstates", "RealestateCatalogProperty")]
        public EntityCollection<RealestateCatalogProperty> RealestateCatalogProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealestateCatalogProperty>("RealEstateBrokerModel.FK_RealestateCatalogProperties_RealEstates", "RealestateCatalogProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealestateCatalogProperty>("RealEstateBrokerModel.FK_RealestateCatalogProperties_RealEstates", "RealestateCatalogProperty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateCatalog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateCatalog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateCatalog object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstateCatalog CreateRealEstateCatalog(global::System.Int32 id)
        {
            RealEstateCatalog realEstateCatalog = new RealEstateCatalog();
            realEstateCatalog.ID = id;
            return realEstateCatalog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoURL
        {
            get
            {
                return _PhotoURL;
            }
            set
            {
                OnPhotoURLChanging(value);
                ReportPropertyChanging("PhotoURL");
                _PhotoURL = StructuralObject.SetValidValue(value, true, "PhotoURL");
                ReportPropertyChanged("PhotoURL");
                OnPhotoURLChanged();
            }
        }
        private global::System.String _PhotoURL;
        partial void OnPhotoURLChanging(global::System.String value);
        partial void OnPhotoURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SocialPhotoURL
        {
            get
            {
                return _SocialPhotoURL;
            }
            set
            {
                OnSocialPhotoURLChanging(value);
                ReportPropertyChanging("SocialPhotoURL");
                _SocialPhotoURL = StructuralObject.SetValidValue(value, true, "SocialPhotoURL");
                ReportPropertyChanged("SocialPhotoURL");
                OnSocialPhotoURLChanged();
            }
        }
        private global::System.String _SocialPhotoURL;
        partial void OnSocialPhotoURLChanging(global::System.String value);
        partial void OnSocialPhotoURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AllTags
        {
            get
            {
                return _AllTags;
            }
            set
            {
                OnAllTagsChanging(value);
                ReportPropertyChanging("AllTags");
                _AllTags = StructuralObject.SetValidValue(value, "AllTags");
                ReportPropertyChanged("AllTags");
                OnAllTagsChanged();
            }
        }
        private Nullable<global::System.Boolean> _AllTags;
        partial void OnAllTagsChanging(Nullable<global::System.Boolean> value);
        partial void OnAllTagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, true, "Tag");
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value, "CategoryID");
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealestateCatalogProperties_RealEstateCatalog", "RealestateCatalogProperty")]
        public EntityCollection<RealestateCatalogProperty> RealestateCatalogProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealestateCatalogProperty>("RealEstateBrokerModel.FK_RealestateCatalogProperties_RealEstateCatalog", "RealestateCatalogProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealestateCatalogProperty>("RealEstateBrokerModel.FK_RealestateCatalogProperties_RealEstateCatalog", "RealestateCatalogProperty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealestateCatalogTags_RealEstateCatalogs", "RealestateCatalogTag")]
        public EntityCollection<RealestateCatalogTag> RealestateCatalogTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealestateCatalogTag>("RealEstateBrokerModel.FK_RealestateCatalogTags_RealEstateCatalogs", "RealestateCatalogTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealestateCatalogTag>("RealEstateBrokerModel.FK_RealestateCatalogTags_RealEstateCatalogs", "RealestateCatalogTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCatalogs_CatalogCategories", "CatalogCategory")]
        public CatalogCategory CatalogCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CatalogCategory>("RealEstateBrokerModel.FK_RealEstateCatalogs_CatalogCategories", "CatalogCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CatalogCategory>("RealEstateBrokerModel.FK_RealEstateCatalogs_CatalogCategories", "CatalogCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CatalogCategory> CatalogCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CatalogCategory>("RealEstateBrokerModel.FK_RealEstateCatalogs_CatalogCategories", "CatalogCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CatalogCategory>("RealEstateBrokerModel.FK_RealEstateCatalogs_CatalogCategories", "CatalogCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealestateCatalogProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealestateCatalogProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealestateCatalogProperty object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealestateCatalogProperty CreateRealestateCatalogProperty(global::System.Int32 id)
        {
            RealestateCatalogProperty realestateCatalogProperty = new RealestateCatalogProperty();
            realestateCatalogProperty.ID = id;
            return realestateCatalogProperty;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CatalogID
        {
            get
            {
                return _CatalogID;
            }
            set
            {
                OnCatalogIDChanging(value);
                ReportPropertyChanging("CatalogID");
                _CatalogID = StructuralObject.SetValidValue(value, "CatalogID");
                ReportPropertyChanged("CatalogID");
                OnCatalogIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CatalogID;
        partial void OnCatalogIDChanging(Nullable<global::System.Int32> value);
        partial void OnCatalogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateID
        {
            get
            {
                return _RealEstateID;
            }
            set
            {
                OnRealEstateIDChanging(value);
                ReportPropertyChanging("RealEstateID");
                _RealEstateID = StructuralObject.SetValidValue(value, "RealEstateID");
                ReportPropertyChanged("RealEstateID");
                OnRealEstateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateID;
        partial void OnRealEstateIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealestateCatalogProperties_RealEstateCatalog", "RealEstateCatalog")]
        public RealEstateCatalog RealEstateCatalog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCatalog>("RealEstateBrokerModel.FK_RealestateCatalogProperties_RealEstateCatalog", "RealEstateCatalog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCatalog>("RealEstateBrokerModel.FK_RealestateCatalogProperties_RealEstateCatalog", "RealEstateCatalog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateCatalog> RealEstateCatalogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCatalog>("RealEstateBrokerModel.FK_RealestateCatalogProperties_RealEstateCatalog", "RealEstateCatalog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateCatalog>("RealEstateBrokerModel.FK_RealestateCatalogProperties_RealEstateCatalog", "RealEstateCatalog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealestateCatalogProperties_RealEstates", "RealEstate")]
        public RealEstate RealEstate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealestateCatalogProperties_RealEstates", "RealEstate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealestateCatalogProperties_RealEstates", "RealEstate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstate> RealEstateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealestateCatalogProperties_RealEstates", "RealEstate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealestateCatalogProperties_RealEstates", "RealEstate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealestateCatalogTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealestateCatalogTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealestateCatalogTag object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealestateCatalogTag CreateRealestateCatalogTag(global::System.Int32 id)
        {
            RealestateCatalogTag realestateCatalogTag = new RealestateCatalogTag();
            realestateCatalogTag.ID = id;
            return realestateCatalogTag;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CatalogID
        {
            get
            {
                return _CatalogID;
            }
            set
            {
                OnCatalogIDChanging(value);
                ReportPropertyChanging("CatalogID");
                _CatalogID = StructuralObject.SetValidValue(value, "CatalogID");
                ReportPropertyChanged("CatalogID");
                OnCatalogIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CatalogID;
        partial void OnCatalogIDChanging(Nullable<global::System.Int32> value);
        partial void OnCatalogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                OnTagIDChanging(value);
                ReportPropertyChanging("TagID");
                _TagID = StructuralObject.SetValidValue(value, "TagID");
                ReportPropertyChanged("TagID");
                OnTagIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TagID;
        partial void OnTagIDChanging(Nullable<global::System.Int32> value);
        partial void OnTagIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealestateCatalogTags_RealEstateCatalogs", "RealEstateCatalog")]
        public RealEstateCatalog RealEstateCatalog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCatalog>("RealEstateBrokerModel.FK_RealestateCatalogTags_RealEstateCatalogs", "RealEstateCatalog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCatalog>("RealEstateBrokerModel.FK_RealestateCatalogTags_RealEstateCatalogs", "RealEstateCatalog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateCatalog> RealEstateCatalogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCatalog>("RealEstateBrokerModel.FK_RealestateCatalogTags_RealEstateCatalogs", "RealEstateCatalog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateCatalog>("RealEstateBrokerModel.FK_RealestateCatalogTags_RealEstateCatalogs", "RealEstateCatalog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealestateCatalogTags_Tags", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RealEstateBrokerModel.FK_RealestateCatalogTags_Tags", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RealEstateBrokerModel.FK_RealestateCatalogTags_Tags", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RealEstateBrokerModel.FK_RealestateCatalogTags_Tags", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("RealEstateBrokerModel.FK_RealestateCatalogTags_Tags", "Tag", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateCategory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstateCategory CreateRealEstateCategory(global::System.Int32 id)
        {
            RealEstateCategory realEstateCategory = new RealEstateCategory();
            realEstateCategory.ID = id;
            return realEstateCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Icon
        {
            get
            {
                return _Icon;
            }
            set
            {
                OnIconChanging(value);
                ReportPropertyChanging("Icon");
                _Icon = StructuralObject.SetValidValue(value, true, "Icon");
                ReportPropertyChanged("Icon");
                OnIconChanged();
            }
        }
        private global::System.String _Icon;
        partial void OnIconChanging(global::System.String value);
        partial void OnIconChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnTitle
        {
            get
            {
                return _EnTitle;
            }
            set
            {
                OnEnTitleChanging(value);
                ReportPropertyChanging("EnTitle");
                _EnTitle = StructuralObject.SetValidValue(value, true, "EnTitle");
                ReportPropertyChanged("EnTitle");
                OnEnTitleChanged();
            }
        }
        private global::System.String _EnTitle;
        partial void OnEnTitleChanging(global::System.String value);
        partial void OnEnTitleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_RealEstateCategories", "RealEstates")]
        public EntityCollection<RealEstate> RealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_RealEstateCategories", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_RealEstateCategories", "RealEstates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateStatus_RealEstateCategories", "RealEstateStatus")]
        public EntityCollection<RealEstateStatus> RealEstateStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateStatus>("RealEstateBrokerModel.FK_RealEstateStatus_RealEstateCategories", "RealEstateStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateStatus>("RealEstateBrokerModel.FK_RealEstateStatus_RealEstateCategories", "RealEstateStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateTypes_RealEstateCategories", "RealEstateTypes")]
        public EntityCollection<RealEstateType> RealEstateTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateType>("RealEstateBrokerModel.FK_RealEstateTypes_RealEstateCategories", "RealEstateTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateType>("RealEstateBrokerModel.FK_RealEstateTypes_RealEstateCategories", "RealEstateTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateCompany object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static RealEstateCompany CreateRealEstateCompany(global::System.Int32 id, global::System.DateTime createdDate)
        {
            RealEstateCompany realEstateCompany = new RealEstateCompany();
            realEstateCompany.ID = id;
            realEstateCompany.CreatedDate = createdDate;
            return realEstateCompany;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Logo
        {
            get
            {
                return _Logo;
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, true, "Logo");
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.String _Logo;
        partial void OnLogoChanging(global::System.String value);
        partial void OnLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ShowOnFrontEnd
        {
            get
            {
                return _ShowOnFrontEnd;
            }
            set
            {
                OnShowOnFrontEndChanging(value);
                ReportPropertyChanging("ShowOnFrontEnd");
                _ShowOnFrontEnd = StructuralObject.SetValidValue(value, "ShowOnFrontEnd");
                ReportPropertyChanged("ShowOnFrontEnd");
                OnShowOnFrontEndChanged();
            }
        }
        private Nullable<global::System.Boolean> _ShowOnFrontEnd;
        partial void OnShowOnFrontEndChanging(Nullable<global::System.Boolean> value);
        partial void OnShowOnFrontEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserNos
        {
            get
            {
                return _UserNos;
            }
            set
            {
                OnUserNosChanging(value);
                ReportPropertyChanging("UserNos");
                _UserNos = StructuralObject.SetValidValue(value, "UserNos");
                ReportPropertyChanged("UserNos");
                OnUserNosChanged();
            }
        }
        private Nullable<global::System.Int32> _UserNos;
        partial void OnUserNosChanging(Nullable<global::System.Int32> value);
        partial void OnUserNosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubscriptionEndDate
        {
            get
            {
                return _SubscriptionEndDate;
            }
            set
            {
                OnSubscriptionEndDateChanging(value);
                ReportPropertyChanging("SubscriptionEndDate");
                _SubscriptionEndDate = StructuralObject.SetValidValue(value, "SubscriptionEndDate");
                ReportPropertyChanged("SubscriptionEndDate");
                OnSubscriptionEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubscriptionEndDate;
        partial void OnSubscriptionEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSubscriptionEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActivateStatusID
        {
            get
            {
                return _ActivateStatusID;
            }
            set
            {
                OnActivateStatusIDChanging(value);
                ReportPropertyChanging("ActivateStatusID");
                _ActivateStatusID = StructuralObject.SetValidValue(value, "ActivateStatusID");
                ReportPropertyChanged("ActivateStatusID");
                OnActivateStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ActivateStatusID;
        partial void OnActivateStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnActivateStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Summary
        {
            get
            {
                return _Summary;
            }
            set
            {
                OnSummaryChanging(value);
                ReportPropertyChanging("Summary");
                _Summary = StructuralObject.SetValidValue(value, true, "Summary");
                ReportPropertyChanged("Summary");
                OnSummaryChanged();
            }
        }
        private global::System.String _Summary;
        partial void OnSummaryChanging(global::System.String value);
        partial void OnSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentUserNos
        {
            get
            {
                return _CurrentUserNos;
            }
            set
            {
                OnCurrentUserNosChanging(value);
                ReportPropertyChanging("CurrentUserNos");
                _CurrentUserNos = StructuralObject.SetValidValue(value, "CurrentUserNos");
                ReportPropertyChanged("CurrentUserNos");
                OnCurrentUserNosChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentUserNos;
        partial void OnCurrentUserNosChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentUserNosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectNos
        {
            get
            {
                return _ProjectNos;
            }
            set
            {
                OnProjectNosChanging(value);
                ReportPropertyChanging("ProjectNos");
                _ProjectNos = StructuralObject.SetValidValue(value, "ProjectNos");
                ReportPropertyChanged("ProjectNos");
                OnProjectNosChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectNos;
        partial void OnProjectNosChanging(Nullable<global::System.Int32> value);
        partial void OnProjectNosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentProjectNos
        {
            get
            {
                return _CurrentProjectNos;
            }
            set
            {
                OnCurrentProjectNosChanging(value);
                ReportPropertyChanging("CurrentProjectNos");
                _CurrentProjectNos = StructuralObject.SetValidValue(value, "CurrentProjectNos");
                ReportPropertyChanged("CurrentProjectNos");
                OnCurrentProjectNosChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentProjectNos;
        partial void OnCurrentProjectNosChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentProjectNosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value, "CountryId");
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value, "CityId");
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CityId;
        partial void OnCityIdChanging(Nullable<global::System.Int32> value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DistrictId
        {
            get
            {
                return _DistrictId;
            }
            set
            {
                OnDistrictIdChanging(value);
                ReportPropertyChanging("DistrictId");
                _DistrictId = StructuralObject.SetValidValue(value, "DistrictId");
                ReportPropertyChanged("DistrictId");
                OnDistrictIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DistrictId;
        partial void OnDistrictIdChanging(Nullable<global::System.Int32> value);
        partial void OnDistrictIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true, "Street");
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Longutide
        {
            get
            {
                return _Longutide;
            }
            set
            {
                OnLongutideChanging(value);
                ReportPropertyChanging("Longutide");
                _Longutide = StructuralObject.SetValidValue(value, true, "Longutide");
                ReportPropertyChanged("Longutide");
                OnLongutideChanged();
            }
        }
        private global::System.String _Longutide;
        partial void OnLongutideChanging(global::System.String value);
        partial void OnLongutideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value, true, "Latitude");
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.String _Latitude;
        partial void OnLatitudeChanging(global::System.String value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SuspendReasonID
        {
            get
            {
                return _SuspendReasonID;
            }
            set
            {
                OnSuspendReasonIDChanging(value);
                ReportPropertyChanging("SuspendReasonID");
                _SuspendReasonID = StructuralObject.SetValidValue(value, "SuspendReasonID");
                ReportPropertyChanged("SuspendReasonID");
                OnSuspendReasonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SuspendReasonID;
        partial void OnSuspendReasonIDChanging(Nullable<global::System.Int32> value);
        partial void OnSuspendReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuspendMessage
        {
            get
            {
                return _SuspendMessage;
            }
            set
            {
                OnSuspendMessageChanging(value);
                ReportPropertyChanging("SuspendMessage");
                _SuspendMessage = StructuralObject.SetValidValue(value, true, "SuspendMessage");
                ReportPropertyChanged("SuspendMessage");
                OnSuspendMessageChanged();
            }
        }
        private global::System.String _SuspendMessage;
        partial void OnSuspendMessageChanging(global::System.String value);
        partial void OnSuspendMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSpecial
        {
            get
            {
                return _IsSpecial;
            }
            set
            {
                OnIsSpecialChanging(value);
                ReportPropertyChanging("IsSpecial");
                _IsSpecial = StructuralObject.SetValidValue(value, "IsSpecial");
                ReportPropertyChanged("IsSpecial");
                OnIsSpecialChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSpecial;
        partial void OnIsSpecialChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSpecialChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Subscriber_RealEstateCompanies", "Subscriber")]
        public EntityCollection<Subscriber> Subscribers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscriber>("RealEstateBrokerModel.FK_Subscriber_RealEstateCompanies", "Subscriber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscriber>("RealEstateBrokerModel.FK_Subscriber_RealEstateCompanies", "Subscriber", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_ActiveStatus", "ActiveStatus")]
        public ActiveStatus ActiveStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_RealEstateCompanies_ActiveStatus", "ActiveStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_RealEstateCompanies_ActiveStatus", "ActiveStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActiveStatus> ActiveStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_RealEstateCompanies_ActiveStatus", "ActiveStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_RealEstateCompanies_ActiveStatus", "ActiveStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_RealEstateCompanies", "RealEstateProject")]
        public EntityCollection<RealEstateProject> RealEstateProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_RealEstateCompanies", "RealEstateProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_RealEstateCompanies", "RealEstateProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_Cities", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_RealEstateCompanies_Cities", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_RealEstateCompanies_Cities", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_RealEstateCompanies_Cities", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("RealEstateBrokerModel.FK_RealEstateCompanies_Cities", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_Countries", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_RealEstateCompanies_Countries", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_RealEstateCompanies_Countries", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_RealEstateCompanies_Countries", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("RealEstateBrokerModel.FK_RealEstateCompanies_Countries", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_Districts", "District")]
        public District District
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateBrokerModel.FK_RealEstateCompanies_Districts", "District").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateBrokerModel.FK_RealEstateCompanies_Districts", "District").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<District> DistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateBrokerModel.FK_RealEstateCompanies_Districts", "District");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<District>("RealEstateBrokerModel.FK_RealEstateCompanies_Districts", "District", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_CompanyMessages_RealEstateCompanies", "CompanyMessage")]
        public EntityCollection<CompanyMessage> CompanyMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyMessage>("RealEstateBrokerModel.FK_CompanyMessages_RealEstateCompanies", "CompanyMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyMessage>("RealEstateBrokerModel.FK_CompanyMessages_RealEstateCompanies", "CompanyMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_SuspendReasons", "SuspendReason")]
        public SuspendReason SuspendReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuspendReason>("RealEstateBrokerModel.FK_RealEstateCompanies_SuspendReasons", "SuspendReason").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuspendReason>("RealEstateBrokerModel.FK_RealEstateCompanies_SuspendReasons", "SuspendReason").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SuspendReason> SuspendReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuspendReason>("RealEstateBrokerModel.FK_RealEstateCompanies_SuspendReasons", "SuspendReason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SuspendReason>("RealEstateBrokerModel.FK_RealEstateCompanies_SuspendReasons", "SuspendReason", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateComplain")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateComplain : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateComplain object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstateComplain CreateRealEstateComplain(global::System.Int32 id)
        {
            RealEstateComplain realEstateComplain = new RealEstateComplain();
            realEstateComplain.ID = id;
            return realEstateComplain;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateID
        {
            get
            {
                return _RealEstateID;
            }
            set
            {
                OnRealEstateIDChanging(value);
                ReportPropertyChanging("RealEstateID");
                _RealEstateID = StructuralObject.SetValidValue(value, "RealEstateID");
                ReportPropertyChanged("RealEstateID");
                OnRealEstateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateID;
        partial void OnRealEstateIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComplainerName
        {
            get
            {
                return _ComplainerName;
            }
            set
            {
                OnComplainerNameChanging(value);
                ReportPropertyChanging("ComplainerName");
                _ComplainerName = StructuralObject.SetValidValue(value, true, "ComplainerName");
                ReportPropertyChanged("ComplainerName");
                OnComplainerNameChanged();
            }
        }
        private global::System.String _ComplainerName;
        partial void OnComplainerNameChanging(global::System.String value);
        partial void OnComplainerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComplainerEmail
        {
            get
            {
                return _ComplainerEmail;
            }
            set
            {
                OnComplainerEmailChanging(value);
                ReportPropertyChanging("ComplainerEmail");
                _ComplainerEmail = StructuralObject.SetValidValue(value, true, "ComplainerEmail");
                ReportPropertyChanged("ComplainerEmail");
                OnComplainerEmailChanged();
            }
        }
        private global::System.String _ComplainerEmail;
        partial void OnComplainerEmailChanging(global::System.String value);
        partial void OnComplainerEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComplainerPhone
        {
            get
            {
                return _ComplainerPhone;
            }
            set
            {
                OnComplainerPhoneChanging(value);
                ReportPropertyChanging("ComplainerPhone");
                _ComplainerPhone = StructuralObject.SetValidValue(value, true, "ComplainerPhone");
                ReportPropertyChanged("ComplainerPhone");
                OnComplainerPhoneChanged();
            }
        }
        private global::System.String _ComplainerPhone;
        partial void OnComplainerPhoneChanging(global::System.String value);
        partial void OnComplainerPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComplainDetails
        {
            get
            {
                return _ComplainDetails;
            }
            set
            {
                OnComplainDetailsChanging(value);
                ReportPropertyChanging("ComplainDetails");
                _ComplainDetails = StructuralObject.SetValidValue(value, true, "ComplainDetails");
                ReportPropertyChanged("ComplainDetails");
                OnComplainDetailsChanged();
            }
        }
        private global::System.String _ComplainDetails;
        partial void OnComplainDetailsChanging(global::System.String value);
        partial void OnComplainDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRead
        {
            get
            {
                return _IsRead;
            }
            set
            {
                OnIsReadChanging(value);
                ReportPropertyChanging("IsRead");
                _IsRead = StructuralObject.SetValidValue(value, "IsRead");
                ReportPropertyChanged("IsRead");
                OnIsReadChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRead;
        partial void OnIsReadChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComplainTitle
        {
            get
            {
                return _ComplainTitle;
            }
            set
            {
                OnComplainTitleChanging(value);
                ReportPropertyChanging("ComplainTitle");
                _ComplainTitle = StructuralObject.SetValidValue(value, true, "ComplainTitle");
                ReportPropertyChanged("ComplainTitle");
                OnComplainTitleChanged();
            }
        }
        private global::System.String _ComplainTitle;
        partial void OnComplainTitleChanging(global::System.String value);
        partial void OnComplainTitleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateComplains_RealEstates", "RealEstate")]
        public RealEstate RealEstate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateComplains_RealEstates", "RealEstate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateComplains_RealEstates", "RealEstate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstate> RealEstateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateComplains_RealEstates", "RealEstate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateComplains_RealEstates", "RealEstate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateCriteria")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateCriteria : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateCriteria object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstateCriteria CreateRealEstateCriteria(global::System.Int32 id)
        {
            RealEstateCriteria realEstateCriteria = new RealEstateCriteria();
            realEstateCriteria.ID = id;
            return realEstateCriteria;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateID
        {
            get
            {
                return _RealEstateID;
            }
            set
            {
                OnRealEstateIDChanging(value);
                ReportPropertyChanging("RealEstateID");
                _RealEstateID = StructuralObject.SetValidValue(value, "RealEstateID");
                ReportPropertyChanged("RealEstateID");
                OnRealEstateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateID;
        partial void OnRealEstateIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateTypeCriteriaID
        {
            get
            {
                return _RealEstateTypeCriteriaID;
            }
            set
            {
                OnRealEstateTypeCriteriaIDChanging(value);
                ReportPropertyChanging("RealEstateTypeCriteriaID");
                _RealEstateTypeCriteriaID = StructuralObject.SetValidValue(value, "RealEstateTypeCriteriaID");
                ReportPropertyChanged("RealEstateTypeCriteriaID");
                OnRealEstateTypeCriteriaIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateTypeCriteriaID;
        partial void OnRealEstateTypeCriteriaIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateTypeCriteriaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCriteria_RealEstates", "RealEstates")]
        public RealEstate RealEstate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateCriteria_RealEstates", "RealEstates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateCriteria_RealEstates", "RealEstates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstate> RealEstateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateCriteria_RealEstates", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateCriteria_RealEstates", "RealEstates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCriteria_RealEstateTypeCriterias", "RealEstateTypeCriterias")]
        public RealEstateTypeCriteria RealEstateTypeCriteria
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateTypeCriteria>("RealEstateBrokerModel.FK_RealEstateCriteria_RealEstateTypeCriterias", "RealEstateTypeCriterias").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateTypeCriteria>("RealEstateBrokerModel.FK_RealEstateCriteria_RealEstateTypeCriterias", "RealEstateTypeCriterias").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateTypeCriteria> RealEstateTypeCriteriaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateTypeCriteria>("RealEstateBrokerModel.FK_RealEstateCriteria_RealEstateTypeCriterias", "RealEstateTypeCriterias");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateTypeCriteria>("RealEstateBrokerModel.FK_RealEstateCriteria_RealEstateTypeCriterias", "RealEstateTypeCriterias", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateKeyword")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateKeyword : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateKeyword object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstateKeyword CreateRealEstateKeyword(global::System.Int32 id)
        {
            RealEstateKeyword realEstateKeyword = new RealEstateKeyword();
            realEstateKeyword.ID = id;
            return realEstateKeyword;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateID
        {
            get
            {
                return _RealEstateID;
            }
            set
            {
                OnRealEstateIDChanging(value);
                ReportPropertyChanging("RealEstateID");
                _RealEstateID = StructuralObject.SetValidValue(value, "RealEstateID");
                ReportPropertyChanged("RealEstateID");
                OnRealEstateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateID;
        partial void OnRealEstateIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KeywordID
        {
            get
            {
                return _KeywordID;
            }
            set
            {
                OnKeywordIDChanging(value);
                ReportPropertyChanging("KeywordID");
                _KeywordID = StructuralObject.SetValidValue(value, "KeywordID");
                ReportPropertyChanged("KeywordID");
                OnKeywordIDChanged();
            }
        }
        private Nullable<global::System.Int32> _KeywordID;
        partial void OnKeywordIDChanging(Nullable<global::System.Int32> value);
        partial void OnKeywordIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateKeyword_Keywords", "Keywords")]
        public Keyword Keyword
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Keyword>("RealEstateBrokerModel.FK_RealEstateKeyword_Keywords", "Keywords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Keyword>("RealEstateBrokerModel.FK_RealEstateKeyword_Keywords", "Keywords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Keyword> KeywordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Keyword>("RealEstateBrokerModel.FK_RealEstateKeyword_Keywords", "Keywords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Keyword>("RealEstateBrokerModel.FK_RealEstateKeyword_Keywords", "Keywords", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateKeyword_RealEstates", "RealEstates")]
        public RealEstate RealEstate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateKeyword_RealEstates", "RealEstates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateKeyword_RealEstates", "RealEstates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstate> RealEstateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateKeyword_RealEstates", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateKeyword_RealEstates", "RealEstates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstatePhoto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstatePhoto : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstatePhoto object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstatePhoto CreateRealEstatePhoto(global::System.Int32 id)
        {
            RealEstatePhoto realEstatePhoto = new RealEstatePhoto();
            realEstatePhoto.ID = id;
            return realEstatePhoto;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateID
        {
            get
            {
                return _RealEstateID;
            }
            set
            {
                OnRealEstateIDChanging(value);
                ReportPropertyChanging("RealEstateID");
                _RealEstateID = StructuralObject.SetValidValue(value, "RealEstateID");
                ReportPropertyChanged("RealEstateID");
                OnRealEstateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateID;
        partial void OnRealEstateIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoName
        {
            get
            {
                return _PhotoName;
            }
            set
            {
                OnPhotoNameChanging(value);
                ReportPropertyChanging("PhotoName");
                _PhotoName = StructuralObject.SetValidValue(value, true, "PhotoName");
                ReportPropertyChanged("PhotoName");
                OnPhotoNameChanged();
            }
        }
        private global::System.String _PhotoName;
        partial void OnPhotoNameChanging(global::System.String value);
        partial void OnPhotoNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value, "IsDefault");
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDefault;
        partial void OnIsDefaultChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDefaultChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstatePhotos_RealEstates", "RealEstates")]
        public RealEstate RealEstate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstatePhotos_RealEstates", "RealEstates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstatePhotos_RealEstates", "RealEstates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstate> RealEstateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstatePhotos_RealEstates", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstatePhotos_RealEstates", "RealEstates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateProject object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstateProject CreateRealEstateProject(global::System.Int32 id)
        {
            RealEstateProject realEstateProject = new RealEstateProject();
            realEstateProject.ID = id;
            return realEstateProject;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubscriberID
        {
            get
            {
                return _SubscriberID;
            }
            set
            {
                OnSubscriberIDChanging(value);
                ReportPropertyChanging("SubscriberID");
                _SubscriberID = StructuralObject.SetValidValue(value, "SubscriberID");
                ReportPropertyChanged("SubscriberID");
                OnSubscriberIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubscriberID;
        partial void OnSubscriberIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubscriberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyID;
        partial void OnCompanyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DistrictID
        {
            get
            {
                return _DistrictID;
            }
            set
            {
                OnDistrictIDChanging(value);
                ReportPropertyChanging("DistrictID");
                _DistrictID = StructuralObject.SetValidValue(value, "DistrictID");
                ReportPropertyChanged("DistrictID");
                OnDistrictIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DistrictID;
        partial void OnDistrictIDChanging(Nullable<global::System.Int32> value);
        partial void OnDistrictIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Logo
        {
            get
            {
                return _Logo;
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, true, "Logo");
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.String _Logo;
        partial void OnLogoChanging(global::System.String value);
        partial void OnLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActiveStatusID
        {
            get
            {
                return _ActiveStatusID;
            }
            set
            {
                OnActiveStatusIDChanging(value);
                ReportPropertyChanging("ActiveStatusID");
                _ActiveStatusID = StructuralObject.SetValidValue(value, "ActiveStatusID");
                ReportPropertyChanged("ActiveStatusID");
                OnActiveStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ActiveStatusID;
        partial void OnActiveStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnActiveStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdPackageID
        {
            get
            {
                return _AdPackageID;
            }
            set
            {
                OnAdPackageIDChanging(value);
                ReportPropertyChanging("AdPackageID");
                _AdPackageID = StructuralObject.SetValidValue(value, "AdPackageID");
                ReportPropertyChanged("AdPackageID");
                OnAdPackageIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdPackageID;
        partial void OnAdPackageIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdPackageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value, true, "Longitude");
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.String _Longitude;
        partial void OnLongitudeChanging(global::System.String value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value, true, "Latitude");
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.String _Latitude;
        partial void OnLatitudeChanging(global::System.String value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SuspendReasonID
        {
            get
            {
                return _SuspendReasonID;
            }
            set
            {
                OnSuspendReasonIDChanging(value);
                ReportPropertyChanging("SuspendReasonID");
                _SuspendReasonID = StructuralObject.SetValidValue(value, "SuspendReasonID");
                ReportPropertyChanged("SuspendReasonID");
                OnSuspendReasonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SuspendReasonID;
        partial void OnSuspendReasonIDChanging(Nullable<global::System.Int32> value);
        partial void OnSuspendReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuspendMessage
        {
            get
            {
                return _SuspendMessage;
            }
            set
            {
                OnSuspendMessageChanging(value);
                ReportPropertyChanging("SuspendMessage");
                _SuspendMessage = StructuralObject.SetValidValue(value, true, "SuspendMessage");
                ReportPropertyChanged("SuspendMessage");
                OnSuspendMessageChanged();
            }
        }
        private global::System.String _SuspendMessage;
        partial void OnSuspendMessageChanging(global::System.String value);
        partial void OnSuspendMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sologan
        {
            get
            {
                return _Sologan;
            }
            set
            {
                OnSologanChanging(value);
                ReportPropertyChanging("Sologan");
                _Sologan = StructuralObject.SetValidValue(value, true, "Sologan");
                ReportPropertyChanged("Sologan");
                OnSologanChanged();
            }
        }
        private global::System.String _Sologan;
        partial void OnSologanChanging(global::System.String value);
        partial void OnSologanChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_ActiveStatus", "ActiveStatus")]
        public ActiveStatus ActiveStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_RealEstateProjects_ActiveStatus", "ActiveStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_RealEstateProjects_ActiveStatus", "ActiveStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActiveStatus> ActiveStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_RealEstateProjects_ActiveStatus", "ActiveStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_RealEstateProjects_ActiveStatus", "ActiveStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_AdPackages", "AdPackage")]
        public AdPackage AdPackage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdPackage>("RealEstateBrokerModel.FK_RealEstateProjects_AdPackages", "AdPackage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdPackage>("RealEstateBrokerModel.FK_RealEstateProjects_AdPackages", "AdPackage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdPackage> AdPackageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdPackage>("RealEstateBrokerModel.FK_RealEstateProjects_AdPackages", "AdPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdPackage>("RealEstateBrokerModel.FK_RealEstateProjects_AdPackages", "AdPackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_Cities", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_RealEstateProjects_Cities", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_RealEstateProjects_Cities", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateBrokerModel.FK_RealEstateProjects_Cities", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("RealEstateBrokerModel.FK_RealEstateProjects_Cities", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_Countries", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_RealEstateProjects_Countries", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_RealEstateProjects_Countries", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RealEstateBrokerModel.FK_RealEstateProjects_Countries", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("RealEstateBrokerModel.FK_RealEstateProjects_Countries", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_Districts", "District")]
        public District District
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateBrokerModel.FK_RealEstateProjects_Districts", "District").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateBrokerModel.FK_RealEstateProjects_Districts", "District").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<District> DistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateBrokerModel.FK_RealEstateProjects_Districts", "District");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<District>("RealEstateBrokerModel.FK_RealEstateProjects_Districts", "District", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_RealEstateCompanies", "RealEstateCompany")]
        public RealEstateCompany RealEstateCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateProjects_RealEstateCompanies", "RealEstateCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateProjects_RealEstateCompanies", "RealEstateCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateCompany> RealEstateCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateProjects_RealEstateCompanies", "RealEstateCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateProjects_RealEstateCompanies", "RealEstateCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjectModels_RealEstateProjects", "RealEstateProjectModel")]
        public EntityCollection<RealEstateProjectModel> RealEstateProjectModels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateProjectModel>("RealEstateBrokerModel.FK_RealEstateProjectModels_RealEstateProjects", "RealEstateProjectModel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateProjectModel>("RealEstateBrokerModel.FK_RealEstateProjectModels_RealEstateProjects", "RealEstateProjectModel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjectPhotos_RealEstateProjects", "RealEstateProjectPhoto")]
        public EntityCollection<RealEstateProjectPhoto> RealEstateProjectPhotos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateProjectPhoto>("RealEstateBrokerModel.FK_RealEstateProjectPhotos_RealEstateProjects", "RealEstateProjectPhoto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateProjectPhoto>("RealEstateBrokerModel.FK_RealEstateProjectPhotos_RealEstateProjects", "RealEstateProjectPhoto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_Subscriber", "Subscriber")]
        public Subscriber Subscriber
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_RealEstateProjects_Subscriber", "Subscriber").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_RealEstateProjects_Subscriber", "Subscriber").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subscriber> SubscriberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_RealEstateProjects_Subscriber", "Subscriber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subscriber>("RealEstateBrokerModel.FK_RealEstateProjects_Subscriber", "Subscriber", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjectVideos_RealEstateProjects", "RealEstateProjectVideo")]
        public EntityCollection<RealEstateProjectVideo> RealEstateProjectVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateProjectVideo>("RealEstateBrokerModel.FK_RealEstateProjectVideos_RealEstateProjects", "RealEstateProjectVideo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateProjectVideo>("RealEstateBrokerModel.FK_RealEstateProjectVideos_RealEstateProjects", "RealEstateProjectVideo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_CompanyMessages_RealEstateProjects", "CompanyMessage")]
        public EntityCollection<CompanyMessage> CompanyMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyMessage>("RealEstateBrokerModel.FK_CompanyMessages_RealEstateProjects", "CompanyMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyMessage>("RealEstateBrokerModel.FK_CompanyMessages_RealEstateProjects", "CompanyMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_SuspendReasons", "SuspendReason")]
        public SuspendReason SuspendReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuspendReason>("RealEstateBrokerModel.FK_RealEstateProjects_SuspendReasons", "SuspendReason").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuspendReason>("RealEstateBrokerModel.FK_RealEstateProjects_SuspendReasons", "SuspendReason").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SuspendReason> SuspendReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuspendReason>("RealEstateBrokerModel.FK_RealEstateProjects_SuspendReasons", "SuspendReason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SuspendReason>("RealEstateBrokerModel.FK_RealEstateProjects_SuspendReasons", "SuspendReason", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_RealEstateProjects", "RealEstate")]
        public EntityCollection<RealEstate> RealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_RealEstateProjects", "RealEstate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_RealEstateProjects", "RealEstate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateProjectModel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateProjectModel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateProjectModel object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstateProjectModel CreateRealEstateProjectModel(global::System.Int32 id)
        {
            RealEstateProjectModel realEstateProjectModel = new RealEstateProjectModel();
            realEstateProjectModel.ID = id;
            return realEstateProjectModel;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateTypeID
        {
            get
            {
                return _RealEstateTypeID;
            }
            set
            {
                OnRealEstateTypeIDChanging(value);
                ReportPropertyChanging("RealEstateTypeID");
                _RealEstateTypeID = StructuralObject.SetValidValue(value, "RealEstateTypeID");
                ReportPropertyChanged("RealEstateTypeID");
                OnRealEstateTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateTypeID;
        partial void OnRealEstateTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlanImgURL
        {
            get
            {
                return _PlanImgURL;
            }
            set
            {
                OnPlanImgURLChanging(value);
                ReportPropertyChanging("PlanImgURL");
                _PlanImgURL = StructuralObject.SetValidValue(value, true, "PlanImgURL");
                ReportPropertyChanged("PlanImgURL");
                OnPlanImgURLChanged();
            }
        }
        private global::System.String _PlanImgURL;
        partial void OnPlanImgURLChanging(global::System.String value);
        partial void OnPlanImgURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value, "Area");
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private Nullable<global::System.Int32> _Area;
        partial void OnAreaChanging(Nullable<global::System.Int32> value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Int32> _Price;
        partial void OnPriceChanging(Nullable<global::System.Int32> value);
        partial void OnPriceChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjectModels_RealEstateProjects", "RealEstateProject")]
        public RealEstateProject RealEstateProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjectModels_RealEstateProjects", "RealEstateProject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjectModels_RealEstateProjects", "RealEstateProject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateProject> RealEstateProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjectModels_RealEstateProjects", "RealEstateProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjectModels_RealEstateProjects", "RealEstateProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjectModels_RealEstateTypes", "RealEstateType")]
        public RealEstateType RealEstateType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_RealEstateProjectModels_RealEstateTypes", "RealEstateType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_RealEstateProjectModels_RealEstateTypes", "RealEstateType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateType> RealEstateTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_RealEstateProjectModels_RealEstateTypes", "RealEstateType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_RealEstateProjectModels_RealEstateTypes", "RealEstateType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateProjectPhoto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateProjectPhoto : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateProjectPhoto object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstateProjectPhoto CreateRealEstateProjectPhoto(global::System.Int32 id)
        {
            RealEstateProjectPhoto realEstateProjectPhoto = new RealEstateProjectPhoto();
            realEstateProjectPhoto.ID = id;
            return realEstateProjectPhoto;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoURL
        {
            get
            {
                return _PhotoURL;
            }
            set
            {
                OnPhotoURLChanging(value);
                ReportPropertyChanging("PhotoURL");
                _PhotoURL = StructuralObject.SetValidValue(value, true, "PhotoURL");
                ReportPropertyChanged("PhotoURL");
                OnPhotoURLChanged();
            }
        }
        private global::System.String _PhotoURL;
        partial void OnPhotoURLChanging(global::System.String value);
        partial void OnPhotoURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value, "IsDefault");
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDefault;
        partial void OnIsDefaultChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjectPhotos_RealEstateProjects", "RealEstateProject")]
        public RealEstateProject RealEstateProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjectPhotos_RealEstateProjects", "RealEstateProject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjectPhotos_RealEstateProjects", "RealEstateProject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateProject> RealEstateProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjectPhotos_RealEstateProjects", "RealEstateProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjectPhotos_RealEstateProjects", "RealEstateProject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateProjectVideo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateProjectVideo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateProjectVideo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstateProjectVideo CreateRealEstateProjectVideo(global::System.Int32 id)
        {
            RealEstateProjectVideo realEstateProjectVideo = new RealEstateProjectVideo();
            realEstateProjectVideo.ID = id;
            return realEstateProjectVideo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TiTle
        {
            get
            {
                return _TiTle;
            }
            set
            {
                OnTiTleChanging(value);
                ReportPropertyChanging("TiTle");
                _TiTle = StructuralObject.SetValidValue(value, true, "TiTle");
                ReportPropertyChanged("TiTle");
                OnTiTleChanged();
            }
        }
        private global::System.String _TiTle;
        partial void OnTiTleChanging(global::System.String value);
        partial void OnTiTleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true, "URL");
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmedCode
        {
            get
            {
                return _EmedCode;
            }
            set
            {
                OnEmedCodeChanging(value);
                ReportPropertyChanging("EmedCode");
                _EmedCode = StructuralObject.SetValidValue(value, true, "EmedCode");
                ReportPropertyChanged("EmedCode");
                OnEmedCodeChanged();
            }
        }
        private global::System.String _EmedCode;
        partial void OnEmedCodeChanging(global::System.String value);
        partial void OnEmedCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjectVideos_RealEstateProjects", "RealEstateProject")]
        public RealEstateProject RealEstateProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjectVideos_RealEstateProjects", "RealEstateProject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjectVideos_RealEstateProjects", "RealEstateProject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateProject> RealEstateProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjectVideos_RealEstateProjects", "RealEstateProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjectVideos_RealEstateProjects", "RealEstateProject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstatePurchaseRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstatePurchaseRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstatePurchaseRequest object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstatePurchaseRequest CreateRealEstatePurchaseRequest(global::System.Int32 id)
        {
            RealEstatePurchaseRequest realEstatePurchaseRequest = new RealEstatePurchaseRequest();
            realEstatePurchaseRequest.ID = id;
            return realEstatePurchaseRequest;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateID
        {
            get
            {
                return _RealEstateID;
            }
            set
            {
                OnRealEstateIDChanging(value);
                ReportPropertyChanging("RealEstateID");
                _RealEstateID = StructuralObject.SetValidValue(value, "RealEstateID");
                ReportPropertyChanged("RealEstateID");
                OnRealEstateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateID;
        partial void OnRealEstateIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PurchaserName
        {
            get
            {
                return _PurchaserName;
            }
            set
            {
                OnPurchaserNameChanging(value);
                ReportPropertyChanging("PurchaserName");
                _PurchaserName = StructuralObject.SetValidValue(value, true, "PurchaserName");
                ReportPropertyChanged("PurchaserName");
                OnPurchaserNameChanged();
            }
        }
        private global::System.String _PurchaserName;
        partial void OnPurchaserNameChanging(global::System.String value);
        partial void OnPurchaserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PurchaserPhone
        {
            get
            {
                return _PurchaserPhone;
            }
            set
            {
                OnPurchaserPhoneChanging(value);
                ReportPropertyChanging("PurchaserPhone");
                _PurchaserPhone = StructuralObject.SetValidValue(value, true, "PurchaserPhone");
                ReportPropertyChanged("PurchaserPhone");
                OnPurchaserPhoneChanged();
            }
        }
        private global::System.String _PurchaserPhone;
        partial void OnPurchaserPhoneChanging(global::System.String value);
        partial void OnPurchaserPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PurchaserEmail
        {
            get
            {
                return _PurchaserEmail;
            }
            set
            {
                OnPurchaserEmailChanging(value);
                ReportPropertyChanging("PurchaserEmail");
                _PurchaserEmail = StructuralObject.SetValidValue(value, true, "PurchaserEmail");
                ReportPropertyChanged("PurchaserEmail");
                OnPurchaserEmailChanged();
            }
        }
        private global::System.String _PurchaserEmail;
        partial void OnPurchaserEmailChanging(global::System.String value);
        partial void OnPurchaserEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true, "Message");
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRead
        {
            get
            {
                return _IsRead;
            }
            set
            {
                OnIsReadChanging(value);
                ReportPropertyChanging("IsRead");
                _IsRead = StructuralObject.SetValidValue(value, "IsRead");
                ReportPropertyChanged("IsRead");
                OnIsReadChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRead;
        partial void OnIsReadChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsInquiry
        {
            get
            {
                return _IsInquiry;
            }
            set
            {
                OnIsInquiryChanging(value);
                ReportPropertyChanging("IsInquiry");
                _IsInquiry = StructuralObject.SetValidValue(value, "IsInquiry");
                ReportPropertyChanged("IsInquiry");
                OnIsInquiryChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsInquiry;
        partial void OnIsInquiryChanging(Nullable<global::System.Boolean> value);
        partial void OnIsInquiryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstatePurchaseRequests_RealEstates", "RealEstate")]
        public RealEstate RealEstate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstatePurchaseRequests_RealEstates", "RealEstate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstatePurchaseRequests_RealEstates", "RealEstate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstate> RealEstateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstatePurchaseRequests_RealEstates", "RealEstate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstatePurchaseRequests_RealEstates", "RealEstate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateStatus object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstateStatus CreateRealEstateStatus(global::System.Int32 id)
        {
            RealEstateStatus realEstateStatus = new RealEstateStatus();
            realEstateStatus.ID = id;
            return realEstateStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateCategoryID
        {
            get
            {
                return _RealEstateCategoryID;
            }
            set
            {
                OnRealEstateCategoryIDChanging(value);
                ReportPropertyChanging("RealEstateCategoryID");
                _RealEstateCategoryID = StructuralObject.SetValidValue(value, "RealEstateCategoryID");
                ReportPropertyChanged("RealEstateCategoryID");
                OnRealEstateCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateCategoryID;
        partial void OnRealEstateCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSearchVisible
        {
            get
            {
                return _IsSearchVisible;
            }
            set
            {
                OnIsSearchVisibleChanging(value);
                ReportPropertyChanging("IsSearchVisible");
                _IsSearchVisible = StructuralObject.SetValidValue(value, "IsSearchVisible");
                ReportPropertyChanged("IsSearchVisible");
                OnIsSearchVisibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSearchVisible;
        partial void OnIsSearchVisibleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSearchVisibleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateStatus_RealEstateCategories", "RealEstateCategories")]
        public RealEstateCategory RealEstateCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCategory>("RealEstateBrokerModel.FK_RealEstateStatus_RealEstateCategories", "RealEstateCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCategory>("RealEstateBrokerModel.FK_RealEstateStatus_RealEstateCategories", "RealEstateCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateCategory> RealEstateCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCategory>("RealEstateBrokerModel.FK_RealEstateStatus_RealEstateCategories", "RealEstateCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateCategory>("RealEstateBrokerModel.FK_RealEstateStatus_RealEstateCategories", "RealEstateCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_RealEstateStatus", "RealEstates")]
        public EntityCollection<RealEstate> RealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_RealEstateStatus", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_RealEstateStatus", "RealEstates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateSuspended")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateSuspended : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateSuspended object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstateSuspended CreateRealEstateSuspended(global::System.Int32 id)
        {
            RealEstateSuspended realEstateSuspended = new RealEstateSuspended();
            realEstateSuspended.ID = id;
            return realEstateSuspended;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateID
        {
            get
            {
                return _RealEstateID;
            }
            set
            {
                OnRealEstateIDChanging(value);
                ReportPropertyChanging("RealEstateID");
                _RealEstateID = StructuralObject.SetValidValue(value, "RealEstateID");
                ReportPropertyChanged("RealEstateID");
                OnRealEstateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateID;
        partial void OnRealEstateIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SuspendReasonId
        {
            get
            {
                return _SuspendReasonId;
            }
            set
            {
                OnSuspendReasonIdChanging(value);
                ReportPropertyChanging("SuspendReasonId");
                _SuspendReasonId = StructuralObject.SetValidValue(value, "SuspendReasonId");
                ReportPropertyChanged("SuspendReasonId");
                OnSuspendReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SuspendReasonId;
        partial void OnSuspendReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnSuspendReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true, "Message");
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateSuspended_RealEstates", "RealEstates")]
        public RealEstate RealEstate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateSuspended_RealEstates", "RealEstates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateSuspended_RealEstates", "RealEstates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstate> RealEstateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateSuspended_RealEstates", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstate>("RealEstateBrokerModel.FK_RealEstateSuspended_RealEstates", "RealEstates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateSuspended_SuspendReasons", "SuspendReasons")]
        public SuspendReason SuspendReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuspendReason>("RealEstateBrokerModel.FK_RealEstateSuspended_SuspendReasons", "SuspendReasons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuspendReason>("RealEstateBrokerModel.FK_RealEstateSuspended_SuspendReasons", "SuspendReasons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SuspendReason> SuspendReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuspendReason>("RealEstateBrokerModel.FK_RealEstateSuspended_SuspendReasons", "SuspendReasons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SuspendReason>("RealEstateBrokerModel.FK_RealEstateSuspended_SuspendReasons", "SuspendReasons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstateType CreateRealEstateType(global::System.Int32 id)
        {
            RealEstateType realEstateType = new RealEstateType();
            realEstateType.ID = id;
            return realEstateType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateCategoryId
        {
            get
            {
                return _RealEstateCategoryId;
            }
            set
            {
                OnRealEstateCategoryIdChanging(value);
                ReportPropertyChanging("RealEstateCategoryId");
                _RealEstateCategoryId = StructuralObject.SetValidValue(value, "RealEstateCategoryId");
                ReportPropertyChanged("RealEstateCategoryId");
                OnRealEstateCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateCategoryId;
        partial void OnRealEstateCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Icon
        {
            get
            {
                return _Icon;
            }
            set
            {
                OnIconChanging(value);
                ReportPropertyChanging("Icon");
                _Icon = StructuralObject.SetValidValue(value, true, "Icon");
                ReportPropertyChanged("Icon");
                OnIconChanged();
            }
        }
        private global::System.String _Icon;
        partial void OnIconChanging(global::System.String value);
        partial void OnIconChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnTitle
        {
            get
            {
                return _EnTitle;
            }
            set
            {
                OnEnTitleChanging(value);
                ReportPropertyChanging("EnTitle");
                _EnTitle = StructuralObject.SetValidValue(value, true, "EnTitle");
                ReportPropertyChanged("EnTitle");
                OnEnTitleChanged();
            }
        }
        private global::System.String _EnTitle;
        partial void OnEnTitleChanging(global::System.String value);
        partial void OnEnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sort
        {
            get
            {
                return _Sort;
            }
            set
            {
                OnSortChanging(value);
                ReportPropertyChanging("Sort");
                _Sort = StructuralObject.SetValidValue(value, "Sort");
                ReportPropertyChanged("Sort");
                OnSortChanged();
            }
        }
        private Nullable<global::System.Int32> _Sort;
        partial void OnSortChanging(Nullable<global::System.Int32> value);
        partial void OnSortChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateTypes_RealEstateCategories", "RealEstateCategories")]
        public RealEstateCategory RealEstateCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCategory>("RealEstateBrokerModel.FK_RealEstateTypes_RealEstateCategories", "RealEstateCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCategory>("RealEstateBrokerModel.FK_RealEstateTypes_RealEstateCategories", "RealEstateCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateCategory> RealEstateCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCategory>("RealEstateBrokerModel.FK_RealEstateTypes_RealEstateCategories", "RealEstateCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateCategory>("RealEstateBrokerModel.FK_RealEstateTypes_RealEstateCategories", "RealEstateCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_RealEstateTypes", "RealEstates")]
        public EntityCollection<RealEstate> RealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_RealEstateTypes", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_RealEstateTypes", "RealEstates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCategoryCriterias_RealEstateTypes", "RealEstateTypeCriterias")]
        public EntityCollection<RealEstateTypeCriteria> RealEstateTypeCriterias
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateTypeCriteria>("RealEstateBrokerModel.FK_RealEstateCategoryCriterias_RealEstateTypes", "RealEstateTypeCriterias");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateTypeCriteria>("RealEstateBrokerModel.FK_RealEstateCategoryCriterias_RealEstateTypes", "RealEstateTypeCriterias", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjectModels_RealEstateTypes", "RealEstateProjectModel")]
        public EntityCollection<RealEstateProjectModel> RealEstateProjectModels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateProjectModel>("RealEstateBrokerModel.FK_RealEstateProjectModels_RealEstateTypes", "RealEstateProjectModel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateProjectModel>("RealEstateBrokerModel.FK_RealEstateProjectModels_RealEstateTypes", "RealEstateProjectModel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_NotifyService_RealEstateTypes", "NotifyService")]
        public EntityCollection<NotifyService> NotifyServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotifyService>("RealEstateBrokerModel.FK_NotifyService_RealEstateTypes", "NotifyService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotifyService>("RealEstateBrokerModel.FK_NotifyService_RealEstateTypes", "NotifyService", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="RealEstateTypeCriteria")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealEstateTypeCriteria : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RealEstateTypeCriteria object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RealEstateTypeCriteria CreateRealEstateTypeCriteria(global::System.Int32 id)
        {
            RealEstateTypeCriteria realEstateTypeCriteria = new RealEstateTypeCriteria();
            realEstateTypeCriteria.ID = id;
            return realEstateTypeCriteria;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateTypeID
        {
            get
            {
                return _RealEstateTypeID;
            }
            set
            {
                OnRealEstateTypeIDChanging(value);
                ReportPropertyChanging("RealEstateTypeID");
                _RealEstateTypeID = StructuralObject.SetValidValue(value, "RealEstateTypeID");
                ReportPropertyChanged("RealEstateTypeID");
                OnRealEstateTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateTypeID;
        partial void OnRealEstateTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ValueType
        {
            get
            {
                return _ValueType;
            }
            set
            {
                OnValueTypeChanging(value);
                ReportPropertyChanging("ValueType");
                _ValueType = StructuralObject.SetValidValue(value, true, "ValueType");
                ReportPropertyChanged("ValueType");
                OnValueTypeChanged();
            }
        }
        private global::System.String _ValueType;
        partial void OnValueTypeChanging(global::System.String value);
        partial void OnValueTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCriteria_RealEstateTypeCriterias", "RealEstateCriteria")]
        public EntityCollection<RealEstateCriteria> RealEstateCriterias
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateCriteria>("RealEstateBrokerModel.FK_RealEstateCriteria_RealEstateTypeCriterias", "RealEstateCriteria");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateCriteria>("RealEstateBrokerModel.FK_RealEstateCriteria_RealEstateTypeCriterias", "RealEstateCriteria", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCategoryCriterias_RealEstateTypes", "RealEstateTypes")]
        public RealEstateType RealEstateType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_RealEstateCategoryCriterias_RealEstateTypes", "RealEstateTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_RealEstateCategoryCriterias_RealEstateTypes", "RealEstateTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateType> RealEstateTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_RealEstateCategoryCriterias_RealEstateTypes", "RealEstateTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateType>("RealEstateBrokerModel.FK_RealEstateCategoryCriterias_RealEstateTypes", "RealEstateTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="SaleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SaleType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SaleType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SaleType CreateSaleType(global::System.Int32 id)
        {
            SaleType saleType = new SaleType();
            saleType.ID = id;
            return saleType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVisible
        {
            get
            {
                return _IsVisible;
            }
            set
            {
                OnIsVisibleChanging(value);
                ReportPropertyChanging("IsVisible");
                _IsVisible = StructuralObject.SetValidValue(value, "IsVisible");
                ReportPropertyChanged("IsVisible");
                OnIsVisibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVisible;
        partial void OnIsVisibleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVisibleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_SaleTypes", "RealEstates")]
        public EntityCollection<RealEstate> RealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_SaleTypes", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_SaleTypes", "RealEstates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_NotifyService_SaleTypes", "NotifyService")]
        public EntityCollection<NotifyService> NotifyServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotifyService>("RealEstateBrokerModel.FK_NotifyService_SaleTypes", "NotifyService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotifyService>("RealEstateBrokerModel.FK_NotifyService_SaleTypes", "NotifyService", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="SearchKeyword")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SearchKeyword : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchKeyword object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SearchKeyword CreateSearchKeyword(global::System.Int32 id)
        {
            SearchKeyword searchKeyword = new SearchKeyword();
            searchKeyword.ID = id;
            return searchKeyword;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Keywords
        {
            get
            {
                return _Keywords;
            }
            set
            {
                OnKeywordsChanging(value);
                ReportPropertyChanging("Keywords");
                _Keywords = StructuralObject.SetValidValue(value, true, "Keywords");
                ReportPropertyChanged("Keywords");
                OnKeywordsChanged();
            }
        }
        private global::System.String _Keywords;
        partial void OnKeywordsChanging(global::System.String value);
        partial void OnKeywordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true, "URL");
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value, "ParentID");
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_SearchKeywords_SearchKeywords", "SearchKeyword1")]
        public EntityCollection<SearchKeyword> ChildKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SearchKeyword>("RealEstateBrokerModel.FK_SearchKeywords_SearchKeywords", "SearchKeyword1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SearchKeyword>("RealEstateBrokerModel.FK_SearchKeywords_SearchKeywords", "SearchKeyword1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_SearchKeywords_SearchKeywords", "SearchKeyword")]
        public SearchKeyword Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchKeyword>("RealEstateBrokerModel.FK_SearchKeywords_SearchKeywords", "SearchKeyword").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchKeyword>("RealEstateBrokerModel.FK_SearchKeywords_SearchKeywords", "SearchKeyword").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SearchKeyword> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchKeyword>("RealEstateBrokerModel.FK_SearchKeywords_SearchKeywords", "SearchKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SearchKeyword>("RealEstateBrokerModel.FK_SearchKeywords_SearchKeywords", "SearchKeyword", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="Subscriber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subscriber : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subscriber object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Subscriber CreateSubscriber(global::System.Int32 id)
        {
            Subscriber subscriber = new Subscriber();
            subscriber.ID = id;
            return subscriber;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true, "FullName");
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileNo
        {
            get
            {
                return _MobileNo;
            }
            set
            {
                OnMobileNoChanging(value);
                ReportPropertyChanging("MobileNo");
                _MobileNo = StructuralObject.SetValidValue(value, true, "MobileNo");
                ReportPropertyChanged("MobileNo");
                OnMobileNoChanged();
            }
        }
        private global::System.String _MobileNo;
        partial void OnMobileNoChanging(global::System.String value);
        partial void OnMobileNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActiveStatusID
        {
            get
            {
                return _ActiveStatusID;
            }
            set
            {
                OnActiveStatusIDChanging(value);
                ReportPropertyChanging("ActiveStatusID");
                _ActiveStatusID = StructuralObject.SetValidValue(value, "ActiveStatusID");
                ReportPropertyChanged("ActiveStatusID");
                OnActiveStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ActiveStatusID;
        partial void OnActiveStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnActiveStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActivationCode
        {
            get
            {
                return _ActivationCode;
            }
            set
            {
                OnActivationCodeChanging(value);
                ReportPropertyChanging("ActivationCode");
                _ActivationCode = StructuralObject.SetValidValue(value, true, "ActivationCode");
                ReportPropertyChanged("ActivationCode");
                OnActivationCodeChanged();
            }
        }
        private global::System.String _ActivationCode;
        partial void OnActivationCodeChanging(global::System.String value);
        partial void OnActivationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyID;
        partial void OnCompanyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCompanyAdmin
        {
            get
            {
                return _IsCompanyAdmin;
            }
            set
            {
                OnIsCompanyAdminChanging(value);
                ReportPropertyChanging("IsCompanyAdmin");
                _IsCompanyAdmin = StructuralObject.SetValidValue(value, "IsCompanyAdmin");
                ReportPropertyChanged("IsCompanyAdmin");
                OnIsCompanyAdminChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCompanyAdmin;
        partial void OnIsCompanyAdminChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCompanyAdminChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Subscriber_ActiveStatus", "ActiveStatus")]
        public ActiveStatus ActiveStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_Subscriber_ActiveStatus", "ActiveStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_Subscriber_ActiveStatus", "ActiveStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActiveStatus> ActiveStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_Subscriber_ActiveStatus", "ActiveStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActiveStatus>("RealEstateBrokerModel.FK_Subscriber_ActiveStatus", "ActiveStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstates_Subscriber", "RealEstates")]
        public EntityCollection<RealEstate> RealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_Subscriber", "RealEstates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstate>("RealEstateBrokerModel.FK_RealEstates_Subscriber", "RealEstates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Partners_Subscriber", "Partner")]
        public EntityCollection<Partner> Partners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Partner>("RealEstateBrokerModel.FK_Partners_Subscriber", "Partner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Partner>("RealEstateBrokerModel.FK_Partners_Subscriber", "Partner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Subscriber_RealEstateCompanies", "RealEstateCompany")]
        public RealEstateCompany RealEstateCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCompany>("RealEstateBrokerModel.FK_Subscriber_RealEstateCompanies", "RealEstateCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCompany>("RealEstateBrokerModel.FK_Subscriber_RealEstateCompanies", "RealEstateCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstateCompany> RealEstateCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstateCompany>("RealEstateBrokerModel.FK_Subscriber_RealEstateCompanies", "RealEstateCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstateCompany>("RealEstateBrokerModel.FK_Subscriber_RealEstateCompanies", "RealEstateCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_Subscriber", "RealEstateProject")]
        public EntityCollection<RealEstateProject> RealEstateProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_Subscriber", "RealEstateProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_Subscriber", "RealEstateProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_SubscriberNotifications_Subscriber", "SubscriberNotification")]
        public EntityCollection<SubscriberNotification> SubscriberNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubscriberNotification>("RealEstateBrokerModel.FK_SubscriberNotifications_Subscriber", "SubscriberNotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubscriberNotification>("RealEstateBrokerModel.FK_SubscriberNotifications_Subscriber", "SubscriberNotification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_SubscriberFavouriteRealEstates_Subscriber", "SubscriberFavouriteRealEstate")]
        public EntityCollection<SubscriberFavouriteRealEstate> SubscriberFavouriteRealEstates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubscriberFavouriteRealEstate>("RealEstateBrokerModel.FK_SubscriberFavouriteRealEstates_Subscriber", "SubscriberFavouriteRealEstate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubscriberFavouriteRealEstate>("RealEstateBrokerModel.FK_SubscriberFavouriteRealEstates_Subscriber", "SubscriberFavouriteRealEstate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="SubscriberFavouriteRealEstate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubscriberFavouriteRealEstate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubscriberFavouriteRealEstate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SubscriberFavouriteRealEstate CreateSubscriberFavouriteRealEstate(global::System.Int32 id)
        {
            SubscriberFavouriteRealEstate subscriberFavouriteRealEstate = new SubscriberFavouriteRealEstate();
            subscriberFavouriteRealEstate.ID = id;
            return subscriberFavouriteRealEstate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubScriberID
        {
            get
            {
                return _SubScriberID;
            }
            set
            {
                OnSubScriberIDChanging(value);
                ReportPropertyChanging("SubScriberID");
                _SubScriberID = StructuralObject.SetValidValue(value, "SubScriberID");
                ReportPropertyChanged("SubScriberID");
                OnSubScriberIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubScriberID;
        partial void OnSubScriberIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubScriberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateID
        {
            get
            {
                return _RealEstateID;
            }
            set
            {
                OnRealEstateIDChanging(value);
                ReportPropertyChanging("RealEstateID");
                _RealEstateID = StructuralObject.SetValidValue(value, "RealEstateID");
                ReportPropertyChanged("RealEstateID");
                OnRealEstateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateID;
        partial void OnRealEstateIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_SubscriberFavouriteRealEstates_RealEstates", "RealEstate")]
        public RealEstate RealEstate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_SubscriberFavouriteRealEstates_RealEstates", "RealEstate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_SubscriberFavouriteRealEstates_RealEstates", "RealEstate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealEstate> RealEstateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealEstate>("RealEstateBrokerModel.FK_SubscriberFavouriteRealEstates_RealEstates", "RealEstate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealEstate>("RealEstateBrokerModel.FK_SubscriberFavouriteRealEstates_RealEstates", "RealEstate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_SubscriberFavouriteRealEstates_Subscriber", "Subscriber")]
        public Subscriber Subscriber
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_SubscriberFavouriteRealEstates_Subscriber", "Subscriber").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_SubscriberFavouriteRealEstates_Subscriber", "Subscriber").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subscriber> SubscriberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_SubscriberFavouriteRealEstates_Subscriber", "Subscriber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subscriber>("RealEstateBrokerModel.FK_SubscriberFavouriteRealEstates_Subscriber", "Subscriber", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="SubscriberLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubscriberLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubscriberLog object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SubscriberLog CreateSubscriberLog(global::System.Int32 id)
        {
            SubscriberLog subscriberLog = new SubscriberLog();
            subscriberLog.ID = id;
            return subscriberLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectTypeID
        {
            get
            {
                return _ObjectTypeID;
            }
            set
            {
                OnObjectTypeIDChanging(value);
                ReportPropertyChanging("ObjectTypeID");
                _ObjectTypeID = StructuralObject.SetValidValue(value, "ObjectTypeID");
                ReportPropertyChanged("ObjectTypeID");
                OnObjectTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectTypeID;
        partial void OnObjectTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnObjectTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectID
        {
            get
            {
                return _ObjectID;
            }
            set
            {
                OnObjectIDChanging(value);
                ReportPropertyChanging("ObjectID");
                _ObjectID = StructuralObject.SetValidValue(value, "ObjectID");
                ReportPropertyChanged("ObjectID");
                OnObjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectID;
        partial void OnObjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnObjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActionID
        {
            get
            {
                return _ActionID;
            }
            set
            {
                OnActionIDChanging(value);
                ReportPropertyChanging("ActionID");
                _ActionID = StructuralObject.SetValidValue(value, "ActionID");
                ReportPropertyChanged("ActionID");
                OnActionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ActionID;
        partial void OnActionIDChanging(Nullable<global::System.Int32> value);
        partial void OnActionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObjectName
        {
            get
            {
                return _ObjectName;
            }
            set
            {
                OnObjectNameChanging(value);
                ReportPropertyChanging("ObjectName");
                _ObjectName = StructuralObject.SetValidValue(value, true, "ObjectName");
                ReportPropertyChanged("ObjectName");
                OnObjectNameChanged();
            }
        }
        private global::System.String _ObjectName;
        partial void OnObjectNameChanging(global::System.String value);
        partial void OnObjectNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="SubscriberNotification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubscriberNotification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubscriberNotification object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SubscriberNotification CreateSubscriberNotification(global::System.Int32 id)
        {
            SubscriberNotification subscriberNotification = new SubscriberNotification();
            subscriberNotification.ID = id;
            return subscriberNotification;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubscriberID
        {
            get
            {
                return _SubscriberID;
            }
            set
            {
                OnSubscriberIDChanging(value);
                ReportPropertyChanging("SubscriberID");
                _SubscriberID = StructuralObject.SetValidValue(value, "SubscriberID");
                ReportPropertyChanged("SubscriberID");
                OnSubscriberIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubscriberID;
        partial void OnSubscriberIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubscriberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRead
        {
            get
            {
                return _IsRead;
            }
            set
            {
                OnIsReadChanging(value);
                ReportPropertyChanging("IsRead");
                _IsRead = StructuralObject.SetValidValue(value, "IsRead");
                ReportPropertyChanged("IsRead");
                OnIsReadChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRead;
        partial void OnIsReadChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectTypeID
        {
            get
            {
                return _ObjectTypeID;
            }
            set
            {
                OnObjectTypeIDChanging(value);
                ReportPropertyChanging("ObjectTypeID");
                _ObjectTypeID = StructuralObject.SetValidValue(value, "ObjectTypeID");
                ReportPropertyChanged("ObjectTypeID");
                OnObjectTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectTypeID;
        partial void OnObjectTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnObjectTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectID
        {
            get
            {
                return _ObjectID;
            }
            set
            {
                OnObjectIDChanging(value);
                ReportPropertyChanging("ObjectID");
                _ObjectID = StructuralObject.SetValidValue(value, "ObjectID");
                ReportPropertyChanged("ObjectID");
                OnObjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectID;
        partial void OnObjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnObjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObjectName
        {
            get
            {
                return _ObjectName;
            }
            set
            {
                OnObjectNameChanging(value);
                ReportPropertyChanging("ObjectName");
                _ObjectName = StructuralObject.SetValidValue(value, true, "ObjectName");
                ReportPropertyChanged("ObjectName");
                OnObjectNameChanged();
            }
        }
        private global::System.String _ObjectName;
        partial void OnObjectNameChanging(global::System.String value);
        partial void OnObjectNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_SubscriberNotifications_Subscriber", "Subscriber")]
        public Subscriber Subscriber
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_SubscriberNotifications_Subscriber", "Subscriber").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_SubscriberNotifications_Subscriber", "Subscriber").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subscriber> SubscriberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriber>("RealEstateBrokerModel.FK_SubscriberNotifications_Subscriber", "Subscriber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subscriber>("RealEstateBrokerModel.FK_SubscriberNotifications_Subscriber", "Subscriber", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="SubscriperMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubscriperMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubscriperMessage object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SubscriperMessage CreateSubscriperMessage(global::System.Int32 id)
        {
            SubscriperMessage subscriperMessage = new SubscriperMessage();
            subscriperMessage.ID = id;
            return subscriperMessage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MessageTypeID
        {
            get
            {
                return _MessageTypeID;
            }
            set
            {
                OnMessageTypeIDChanging(value);
                ReportPropertyChanging("MessageTypeID");
                _MessageTypeID = StructuralObject.SetValidValue(value, "MessageTypeID");
                ReportPropertyChanged("MessageTypeID");
                OnMessageTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MessageTypeID;
        partial void OnMessageTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnMessageTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentMessageID
        {
            get
            {
                return _ParentMessageID;
            }
            set
            {
                OnParentMessageIDChanging(value);
                ReportPropertyChanging("ParentMessageID");
                _ParentMessageID = StructuralObject.SetValidValue(value, "ParentMessageID");
                ReportPropertyChanged("ParentMessageID");
                OnParentMessageIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentMessageID;
        partial void OnParentMessageIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRead
        {
            get
            {
                return _IsRead;
            }
            set
            {
                OnIsReadChanging(value);
                ReportPropertyChanging("IsRead");
                _IsRead = StructuralObject.SetValidValue(value, "IsRead");
                ReportPropertyChanged("IsRead");
                OnIsReadChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRead;
        partial void OnIsReadChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true, "Body");
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value, "From");
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private Nullable<global::System.Int32> _From;
        partial void OnFromChanging(Nullable<global::System.Int32> value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> To
        {
            get
            {
                return _To;
            }
            set
            {
                OnToChanging(value);
                ReportPropertyChanging("To");
                _To = StructuralObject.SetValidValue(value, "To");
                ReportPropertyChanged("To");
                OnToChanged();
            }
        }
        private Nullable<global::System.Int32> _To;
        partial void OnToChanging(Nullable<global::System.Int32> value);
        partial void OnToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FromSubscriber
        {
            get
            {
                return _FromSubscriber;
            }
            set
            {
                OnFromSubscriberChanging(value);
                ReportPropertyChanging("FromSubscriber");
                _FromSubscriber = StructuralObject.SetValidValue(value, "FromSubscriber");
                ReportPropertyChanged("FromSubscriber");
                OnFromSubscriberChanged();
            }
        }
        private Nullable<global::System.Boolean> _FromSubscriber;
        partial void OnFromSubscriberChanging(Nullable<global::System.Boolean> value);
        partial void OnFromSubscriberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsClosed
        {
            get
            {
                return _IsClosed;
            }
            set
            {
                OnIsClosedChanging(value);
                ReportPropertyChanging("IsClosed");
                _IsClosed = StructuralObject.SetValidValue(value, "IsClosed");
                ReportPropertyChanged("IsClosed");
                OnIsClosedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsClosed;
        partial void OnIsClosedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsClosedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Messages_Messages", "SubscriperMessages1")]
        public EntityCollection<SubscriperMessage> SubscriperReplyMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubscriperMessage>("RealEstateBrokerModel.FK_Messages_Messages", "SubscriperMessages1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubscriperMessage>("RealEstateBrokerModel.FK_Messages_Messages", "SubscriperMessages1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Messages_Messages", "SubscriperMessages")]
        public SubscriperMessage SubscriperParentMessage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriperMessage>("RealEstateBrokerModel.FK_Messages_Messages", "SubscriperMessages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriperMessage>("RealEstateBrokerModel.FK_Messages_Messages", "SubscriperMessages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubscriperMessage> SubscriperParentMessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriperMessage>("RealEstateBrokerModel.FK_Messages_Messages", "SubscriperMessages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubscriperMessage>("RealEstateBrokerModel.FK_Messages_Messages", "SubscriperMessages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Messages_MessageTypes", "SubscriperMessageTypes")]
        public SubscriperMessageType SubscriperMessageType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriperMessageType>("RealEstateBrokerModel.FK_Messages_MessageTypes", "SubscriperMessageTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriperMessageType>("RealEstateBrokerModel.FK_Messages_MessageTypes", "SubscriperMessageTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubscriperMessageType> SubscriperMessageTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriperMessageType>("RealEstateBrokerModel.FK_Messages_MessageTypes", "SubscriperMessageTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubscriperMessageType>("RealEstateBrokerModel.FK_Messages_MessageTypes", "SubscriperMessageTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="SubscriperMessageType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubscriperMessageType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubscriperMessageType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SubscriperMessageType CreateSubscriperMessageType(global::System.Int32 id)
        {
            SubscriperMessageType subscriperMessageType = new SubscriperMessageType();
            subscriperMessageType.ID = id;
            return subscriperMessageType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Messages_MessageTypes", "SubscriperMessages")]
        public EntityCollection<SubscriperMessage> SubscriperMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubscriperMessage>("RealEstateBrokerModel.FK_Messages_MessageTypes", "SubscriperMessages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubscriperMessage>("RealEstateBrokerModel.FK_Messages_MessageTypes", "SubscriperMessages", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="SuspendReason")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SuspendReason : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SuspendReason object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SuspendReason CreateSuspendReason(global::System.Int32 id)
        {
            SuspendReason suspendReason = new SuspendReason();
            suspendReason.ID = id;
            return suspendReason;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateSuspended_SuspendReasons", "RealEstateSuspended")]
        public EntityCollection<RealEstateSuspended> RealEstateSuspendeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateSuspended>("RealEstateBrokerModel.FK_RealEstateSuspended_SuspendReasons", "RealEstateSuspended");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateSuspended>("RealEstateBrokerModel.FK_RealEstateSuspended_SuspendReasons", "RealEstateSuspended", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateCompanies_SuspendReasons", "RealEstateCompany")]
        public EntityCollection<RealEstateCompany> RealEstateCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateCompanies_SuspendReasons", "RealEstateCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateCompany>("RealEstateBrokerModel.FK_RealEstateCompanies_SuspendReasons", "RealEstateCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealEstateProjects_SuspendReasons", "RealEstateProject")]
        public EntityCollection<RealEstateProject> RealEstateProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_SuspendReasons", "RealEstateProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealEstateProject>("RealEstateBrokerModel.FK_RealEstateProjects_SuspendReasons", "RealEstateProject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Tag CreateTag(global::System.Int32 id)
        {
            Tag tag = new Tag();
            tag.ID = id;
            return tag;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentTagID
        {
            get
            {
                return _ParentTagID;
            }
            set
            {
                OnParentTagIDChanging(value);
                ReportPropertyChanging("ParentTagID");
                _ParentTagID = StructuralObject.SetValidValue(value, "ParentTagID");
                ReportPropertyChanged("ParentTagID");
                OnParentTagIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentTagID;
        partial void OnParentTagIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentTagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true, "URL");
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Tags_Tags", "Tag1")]
        public EntityCollection<Tag> ChildremTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("RealEstateBrokerModel.FK_Tags_Tags", "Tag1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("RealEstateBrokerModel.FK_Tags_Tags", "Tag1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_Tags_Tags", "Tag")]
        public Tag ParentTag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RealEstateBrokerModel.FK_Tags_Tags", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RealEstateBrokerModel.FK_Tags_Tags", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> ParentTagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RealEstateBrokerModel.FK_Tags_Tags", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("RealEstateBrokerModel.FK_Tags_Tags", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateBrokerModel", "FK_RealestateCatalogTags_Tags", "RealestateCatalogTag")]
        public EntityCollection<RealestateCatalogTag> RealestateCatalogTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RealestateCatalogTag>("RealEstateBrokerModel.FK_RealestateCatalogTags_Tags", "RealestateCatalogTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RealestateCatalogTag>("RealEstateBrokerModel.FK_RealestateCatalogTags_Tags", "RealestateCatalogTag", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="RealEstateBrokerModel", Name="SearchRealEstate_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SearchRealEstate_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchRealEstate_Result object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static SearchRealEstate_Result CreateSearchRealEstate_Result(global::System.Int32 id, global::System.Int32 code)
        {
            SearchRealEstate_Result searchRealEstate_Result = new SearchRealEstate_Result();
            searchRealEstate_Result.ID = id;
            searchRealEstate_Result.Code = code;
            return searchRealEstate_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value, "ID");
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubscriberID
        {
            get
            {
                return _SubscriberID;
            }
            set
            {
                OnSubscriberIDChanging(value);
                ReportPropertyChanging("SubscriberID");
                _SubscriberID = StructuralObject.SetValidValue(value, "SubscriberID");
                ReportPropertyChanged("SubscriberID");
                OnSubscriberIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubscriberID;
        partial void OnSubscriberIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubscriberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateCategoryID
        {
            get
            {
                return _RealEstateCategoryID;
            }
            set
            {
                OnRealEstateCategoryIDChanging(value);
                ReportPropertyChanging("RealEstateCategoryID");
                _RealEstateCategoryID = StructuralObject.SetValidValue(value, "RealEstateCategoryID");
                ReportPropertyChanged("RealEstateCategoryID");
                OnRealEstateCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateCategoryID;
        partial void OnRealEstateCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateStatusID
        {
            get
            {
                return _RealEstateStatusID;
            }
            set
            {
                OnRealEstateStatusIDChanging(value);
                ReportPropertyChanging("RealEstateStatusID");
                _RealEstateStatusID = StructuralObject.SetValidValue(value, "RealEstateStatusID");
                ReportPropertyChanged("RealEstateStatusID");
                OnRealEstateStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateStatusID;
        partial void OnRealEstateStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealEstateTypeID
        {
            get
            {
                return _RealEstateTypeID;
            }
            set
            {
                OnRealEstateTypeIDChanging(value);
                ReportPropertyChanging("RealEstateTypeID");
                _RealEstateTypeID = StructuralObject.SetValidValue(value, "RealEstateTypeID");
                ReportPropertyChanged("RealEstateTypeID");
                OnRealEstateTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealEstateTypeID;
        partial void OnRealEstateTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealEstateTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentTypeID
        {
            get
            {
                return _PaymentTypeID;
            }
            set
            {
                OnPaymentTypeIDChanging(value);
                ReportPropertyChanging("PaymentTypeID");
                _PaymentTypeID = StructuralObject.SetValidValue(value, "PaymentTypeID");
                ReportPropertyChanged("PaymentTypeID");
                OnPaymentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentTypeID;
        partial void OnPaymentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = StructuralObject.SetValidValue(value, "CurrencyID");
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyID;
        partial void OnCurrencyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SaleTypeId
        {
            get
            {
                return _SaleTypeId;
            }
            set
            {
                OnSaleTypeIdChanging(value);
                ReportPropertyChanging("SaleTypeId");
                _SaleTypeId = StructuralObject.SetValidValue(value, "SaleTypeId");
                ReportPropertyChanged("SaleTypeId");
                OnSaleTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SaleTypeId;
        partial void OnSaleTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnSaleTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DistrictID
        {
            get
            {
                return _DistrictID;
            }
            set
            {
                OnDistrictIDChanging(value);
                ReportPropertyChanging("DistrictID");
                _DistrictID = StructuralObject.SetValidValue(value, "DistrictID");
                ReportPropertyChanged("DistrictID");
                OnDistrictIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DistrictID;
        partial void OnDistrictIDChanging(Nullable<global::System.Int32> value);
        partial void OnDistrictIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.Int32 _Code;
        partial void OnCodeChanging(global::System.Int32 value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true, "Street");
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Double> _Price;
        partial void OnPriceChanging(Nullable<global::System.Double> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value, "Area");
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private Nullable<global::System.Double> _Area;
        partial void OnAreaChanging(Nullable<global::System.Double> value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value, true, "Longitude");
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.String _Longitude;
        partial void OnLongitudeChanging(global::System.String value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value, true, "Latitude");
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.String _Latitude;
        partial void OnLatitudeChanging(global::System.String value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerName
        {
            get
            {
                return _OwnerName;
            }
            set
            {
                OnOwnerNameChanging(value);
                ReportPropertyChanging("OwnerName");
                _OwnerName = StructuralObject.SetValidValue(value, true, "OwnerName");
                ReportPropertyChanged("OwnerName");
                OnOwnerNameChanged();
            }
        }
        private global::System.String _OwnerName;
        partial void OnOwnerNameChanging(global::System.String value);
        partial void OnOwnerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerMobile
        {
            get
            {
                return _OwnerMobile;
            }
            set
            {
                OnOwnerMobileChanging(value);
                ReportPropertyChanging("OwnerMobile");
                _OwnerMobile = StructuralObject.SetValidValue(value, true, "OwnerMobile");
                ReportPropertyChanged("OwnerMobile");
                OnOwnerMobileChanged();
            }
        }
        private global::System.String _OwnerMobile;
        partial void OnOwnerMobileChanging(global::System.String value);
        partial void OnOwnerMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerEmail
        {
            get
            {
                return _OwnerEmail;
            }
            set
            {
                OnOwnerEmailChanging(value);
                ReportPropertyChanging("OwnerEmail");
                _OwnerEmail = StructuralObject.SetValidValue(value, true, "OwnerEmail");
                ReportPropertyChanged("OwnerEmail");
                OnOwnerEmailChanged();
            }
        }
        private global::System.String _OwnerEmail;
        partial void OnOwnerEmailChanging(global::System.String value);
        partial void OnOwnerEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSold
        {
            get
            {
                return _IsSold;
            }
            set
            {
                OnIsSoldChanging(value);
                ReportPropertyChanging("IsSold");
                _IsSold = StructuralObject.SetValidValue(value, "IsSold");
                ReportPropertyChanged("IsSold");
                OnIsSoldChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSold;
        partial void OnIsSoldChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSoldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActiveStatusId
        {
            get
            {
                return _ActiveStatusId;
            }
            set
            {
                OnActiveStatusIdChanging(value);
                ReportPropertyChanging("ActiveStatusId");
                _ActiveStatusId = StructuralObject.SetValidValue(value, "ActiveStatusId");
                ReportPropertyChanged("ActiveStatusId");
                OnActiveStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ActiveStatusId;
        partial void OnActiveStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnActiveStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> UseContactInfo
        {
            get
            {
                return _UseContactInfo;
            }
            set
            {
                OnUseContactInfoChanging(value);
                ReportPropertyChanging("UseContactInfo");
                _UseContactInfo = StructuralObject.SetValidValue(value, "UseContactInfo");
                ReportPropertyChanged("UseContactInfo");
                OnUseContactInfoChanged();
            }
        }
        private Nullable<global::System.Boolean> _UseContactInfo;
        partial void OnUseContactInfoChanging(Nullable<global::System.Boolean> value);
        partial void OnUseContactInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsMigrated
        {
            get
            {
                return _IsMigrated;
            }
            set
            {
                OnIsMigratedChanging(value);
                ReportPropertyChanging("IsMigrated");
                _IsMigrated = StructuralObject.SetValidValue(value, "IsMigrated");
                ReportPropertyChanged("IsMigrated");
                OnIsMigratedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsMigrated;
        partial void OnIsMigratedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsMigratedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSpecialOffer
        {
            get
            {
                return _IsSpecialOffer;
            }
            set
            {
                OnIsSpecialOfferChanging(value);
                ReportPropertyChanging("IsSpecialOffer");
                _IsSpecialOffer = StructuralObject.SetValidValue(value, "IsSpecialOffer");
                ReportPropertyChanged("IsSpecialOffer");
                OnIsSpecialOfferChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSpecialOffer;
        partial void OnIsSpecialOfferChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSpecialOfferChanged();

        #endregion

    }

    #endregion

}
