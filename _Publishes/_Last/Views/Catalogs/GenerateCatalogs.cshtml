@model BrokerMVC.Models.ViewModel.CatlogsCriteria

@{
    ViewBag.Title = General.SiteName + " - " + General.Catalog;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<div class="panel panel-primary">
    <div class="panel-heading">
        <div class="row">
            <div class="col-md-7 col-xs-8 pull-right">
                <h2>
                    <i class="fa fa-cube"></i>
                    @General.Catalog - @General.GenerateCatalogs
                </h2>
            </div>
            <div class="col-md-3 col-xs-12">
                <div class="btn-group btn-group-sm btn-group-status pull-right">
                    <a href='@Url.Action("Index")' data-toggle="tooltip" data-placement="bottom" title="@General.BackToList" data-original-title="@General.BackToList" class="btn btn-group-sm btn-success">
                        <strong> <i class="fa fa-arrow-circle-left fa-2x"></i></strong>
                    </a>

                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-body">
        @using (Html.BeginForm("GenerateCatalogs", "Catalogs", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="panel panel-warning">
                    <div class="panel-heading">
                        <div class="panel-title" role="button" data-toggle="collapse" href="#dicBasicData" aria-expanded="false" aria-controls="dicBasicData">
                            <h4>
                                <i class="fa fa-angle-down"></i>
                                <i class="fa fa-address-card"></i>
                                @General.BasicData
                            </h4>
                        </div>
                    </div>
                    <div id="dicBasicData" class="panel panel-body collapse in">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryID, General.keyword, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control", @onchange = "GetCity()" })
                                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.TypeID, General.Type, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.DropDownList("TypeID", null, htmlAttributes: new { @class = "form-control", @onchange = "GetCity()" })
                                @Html.ValidationMessageFor(model => model.TypeID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CountryID, General.CountryName, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control", @onchange = "GetCity()" })
                                @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CityID, General.CityName, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control", @id = "ddlCity", @onchange = "GetDistrict()" })
                                @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DistrictID, General.District, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.DropDownList("DistrictId", null, htmlAttributes: new { @class = "form-control", @id = "ddldistrict", @onchange = "OnDistrictChange()" })
                                @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CatlogsNames, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.CatlogsNames, new { @class = "form-control " })
                                <small class="help-block text-warning"><i class="fa fa-info-circle"></i> @Messages.CatalogNamesTooltip</small>
                                 @Html.ValidationMessageFor(model => model.CatlogsNames, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.KeywordLink, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.KeywordLink, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.KeywordLink, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.GeneralLink,General.GeneralLink, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.GeneralLink, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.GeneralLink, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.WordNo, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.WordNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.WordNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ParagraphNo, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ParagraphNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParagraphNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OccuranceNo, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.OccuranceNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OccuranceNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Headers,General.ParagraphHeaders, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Headers, new { @class = "form-control " })
                                <small class="help-block text-warning"><i class="fa fa-info-circle"></i> @Messages.HeadersTooltip</small>
                                @Html.ValidationMessageFor(model => model.Headers, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-9">
                        <input type="submit" value="@General.Save" class="btn btn-success btn-lg btn-block" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

        function GetCity() {
            var stateId = $('#CountryId').val();
            //  var url = "../GetCities/"@*@Url.Action("GetCities")+"/"+stateId;*@
            $.ajax({
                url: "@Url.Action("GetCities", "Districts")",
                type: "GET",
                dataType: "JSON",
                data: { CountryID: stateId },
                success: function (cities) {
                    $("#ddlCity").html(""); // clear before appending new lis
                    $("#ddlCity").append($('<option></option>').html('@General.Select'));
                    $.each(cities, function (i, city) {
                        $("#ddlCity").append(
                            $('<option></option>').val(city.Id).html(city.Name));
                    });
                    $("#ddldistrict").html(""); // clear before appending new list
                    $("#ddldistrict").append($('<option></option>').html('@General.Select'));
                }
            });
        }
        function OnDistrictChange() {
        }

        function GetDistrict() {
            var stateId = $('#ddlCity').val();
            //$("#ddlCity").html("");
            //$("#ddlCity").append($('<option></option>').html('@General.Select'));
            $.ajax({
                url: "@Url.Action("GetDistricts", "Districts")",
                type: "GET",
                dataType: "JSON",
                data: { CityID: stateId },
                success: function (cities) {
                    //  alert("success")
                    $("#ddldistrict").html(""); // clear before appending new list
                    $("#ddldistrict").append($('<option></option>').html('@General.Select'));
                    $.each(cities, function (i, city) {
                        $("#ddldistrict").append(
                            $('<option></option>').val(city.Id).html(city.Name));
                    });
                }
            });
        }
    </script>
}
