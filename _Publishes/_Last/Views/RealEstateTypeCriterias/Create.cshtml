@model BrokerMVC.Models.RealEstateTypeCriteria

@{
    ViewBag.Title = General.SiteName + " - " + General.RealestateCriteria + " - " + General.CreateNew;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="panel panel-primary">
    <div class="panel-heading">
        <div class="row">
            <div class="col-md-6 pull-right">
                <h2 >
                    <a href='@Url.Action("Index")'>
                        <i class="fa fa-filter"></i>
                        @General.RealestateCriteria
                    </a>
                    /@General.CreateNew
                </h2>
            </div>
            <div class="btn-group pull-left">
                <a href='@Url.Action("Index")' class="btn btn-group-lg btn-success">
                    <i class="fa fa-angle-left"></i>
                    @General.BackToList

                </a>
            </div>
        </div>


    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, General.RealestateCategory, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control", @onchange = "GetTypes()" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.RealEstateTypeID, General.RealestateType, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                    <div class="col-md-10">
                        @Html.DropDownList("RealEstateTypeID", null, htmlAttributes: new { @class = "form-control", @id = "ddlType" })
                        @Html.ValidationMessageFor(model => model.RealEstateTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EnTitle, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EnTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EnTitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ValueType,General.ValueType, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                    <div class="col-md-10">
                        @Html.DropDownList("ValueType", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ValueType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@General.Add" class="btn btn-success btn-group-lg" />
                    </div>
                </div>
            </div>
        }
</div>
    </div>
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}