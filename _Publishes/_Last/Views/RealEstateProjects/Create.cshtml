@model BrokerMVC.Models.RealEstateProject
@{
    ViewBag.Title = General.SiteName + " - " + General.ProjectList + "/" + General.CreateNew;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@helper selected(string c, string culture)
{
if (c == culture)
{
        @:checked="checked"
    }
}

<div class="panel panel-primary">
    <div class="panel-heading">
        <div class="row">
            <div class="col-md-7 col-xs-8 pull-right">
                <h2>
                    <i class="fa fa-industry"></i>
                    @General.ProjectList - @General.CreateNew
                </h2>
            </div>

        </div>
    </div>
    <div class="panel panel-body">
        @using (Html.BeginForm("Create", "RealEstateProjects", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="panel panel-warning">
                    <div class="panel-heading">
                        <div class="panel-title" role="button" data-toggle="collapse" href="#dicBasicData" aria-expanded="false" aria-controls="dicBasicData">
                            <h4>
                                <i class="fa fa-angle-down"></i>
                                <i class="fa fa-address-card"></i>
                                @General.BasicData
                            </h4>
                        </div>
                    </div>
                    <div id="dicBasicData" class="panel panel-body collapse in">


                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EnTitle, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EnTitle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EnTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Sologan, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Sologan, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Sologan, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EnSologan, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EnSologan, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EnSologan, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.LogoFile, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.LogoFile, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.LogoFile, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Summary, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EnSummary, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.EnSummary, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EnSummary, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control Content" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EnDesctiption, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.EnDesctiption, new { @class = "form-control Content" })
                                @Html.ValidationMessageFor(model => model.EnDesctiption, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                </div>
                <div class="panel panel-warning">
                    <div class="panel-heading">
                        <div class="panel-title" role="button" data-toggle="collapse" href="#divAddress" aria-expanded="false" aria-controls="divAddress">
                            <h4>
                                <i class="fa fa-angle-down"></i>
                                <i class="fa fa-map"></i>
                                @General.Address
                            </h4>
                        </div>
                    </div>
                    <div id="divAddress" class="panel panel-body">
                        <div class="col-md-7 pull-right">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CountryID, General.CountryName, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                                <div class="col-md-10">
                                    @Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control", @onchange = "GetCity()" })
                                    @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CityID, General.CityName, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                                <div class="col-md-10">
                                    @Html.DropDownList("CityID", null, htmlAttributes: new { @class = "form-control", @id = "ddlCity", @onchange = "GetDistrict()" })
                                    @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DistrictID, General.District, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                                <div class="col-md-10">
                                    @Html.DropDownList("DistrictID", null, htmlAttributes: new { @class = "form-control", @id = "ddldistrict", @onchange = "OnDistrictChange()" })
                                    @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2 pull-right" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div id="divMap" class="map-md">

                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-9">
                        <input type="submit" value="@General.Save" class="btn btn-success btn-lg btn-block" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render(AppSettingKeysVariables.GoogleMapsKey)
    @Scripts.Render("~/Scripts/js/Map.js")
    @Scripts.Render("~/Scripts/tinymce/tinymce.min.js")
    <script>
        initMap();
        AddListeners();
        tinymce.init({
            selector: '.Content',
            height: 300,
            browser_spellcheck: true,
            plugins: [
             'advlist autolink lists link image charmap print preview anchor',
             'searchreplace visualblocks code fullscreen',
             'insertdatetime media table contextmenu paste code'
            ],
            toolbar: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
            // language: "ar",
            // directionality: 'rtl'
        });
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

        function GetCity() {
            var stateId = $('#CountryID').val();
            //  var url = "../GetCities/"@*@Url.Action("GetCities")+"/"+stateId;*@
            GetAddress($('#CountryID option:selected').text(), 5);
            $.ajax({
                url: "@Url.Action("GetCities", "Districts")",
                type: "GET",
                dataType: "JSON",
                data: { CountryID: stateId },
                success: function (cities) {
                    $("#ddlCity").html(""); // clear before appending new lis
                    $("#ddlCity").append($('<option></option>').html('@General.Select'));
                    $.each(cities, function (i, city) {
                        $("#ddlCity").append(
                            $('<option></option>').val(city.Id).html(city.Name));
                    });
                    $("#ddldistrict").html(""); // clear before appending new list
                    $("#ddldistrict").append($('<option></option>').html('@General.Select'));
                }
            });
        }
        function OnDistrictChange() {
            GetAddress($('#ddldistrict option:selected').text(), 12);
        }
        function OnStreetChange() {
            GetAddress($('#Street').text(), 15);
        }
        function GetDistrict() {
            var stateId = $('#ddlCity').val();
            GetAddress($('#ddlCity option:selected').text(), 10);
            //$("#ddlCity").html("");
            //$("#ddlCity").append($('<option></option>').html('@General.Select'));
            $.ajax({
                url: "@Url.Action("GetDistricts", "Districts")",
                type: "GET",
                dataType: "JSON",
                data: { CityID: stateId },
                success: function (cities) {
                    //  alert("success")
                    $("#ddldistrict").html(""); // clear before appending new list
                    $("#ddldistrict").append($('<option></option>').html('@General.Select'));
                    $.each(cities, function (i, city) {
                        $("#ddldistrict").append(
                            $('<option></option>').val(city.Id).html(city.Name));
                    });
                }
            });
        }
    </script>
}
